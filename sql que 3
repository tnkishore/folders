--Data Wrangling

--Part A. Data Gathering and Assessment

--Uploaded all the GCRM and NDMS tables from the postgres server

--Q1. Prepping s_per_comm_addr with two seperate columns for phone and email
--Creating per_comm_addr for email
create table gcrm.s_per_comm_addr_em1 as select distinct a.per_id, a.addr as email from gcrm.s_per_comm_addr as a where a.comm_medium_cd='Email';

alter table gcrm.s_per_comm_addr_ph1 rename column addr to phone;

--creating per_comm_addr for both phone and email, 27079343
--22449017
select count(*) from gcrm.s_per_comm_addr_ph1 as a;
--20075685
select count(distinct a.per_id) from gcrm.s_per_comm_addr_ph1 as a;
--15830002
select count(*) from gcrm.s_per_comm_addr_em1 as a;
--14380677
select count(distinct a.per_id) from gcrm.s_per_comm_addr_em1 as a;

--Q1a. 22957844
create table gcrm.s_per_comm_ph_email1 as select distinct a.per_id from gcrm.s_per_comm_addr as a;
--Q1b. 25331176
create table gcrm.s_per_comm_ph_email2 as select distinct a.per_id, b.phone from gcrm.s_per_comm_ph_email1 as a left outer join gcrm.s_per_comm_addr_ph1 as b on a.per_id = b.per_id;
--Q1c. 28352579
create table gcrm.s_per_comm_ph_email3 as select distinct a.per_id, a.phone, b.email from gcrm.s_per_comm_ph_email2 as a left outer join gcrm.s_per_comm_addr_em1 as b on a.per_id = b.per_id;

--28352579, 25299333, 19294526
select count(*), count(a.phone), count(a.email) from gcrm.s_per_comm_ph_email3 as a;
--0
select count(*) from gcrm.s_per_comm_ph_email3 as a where a.email is null and a.phone is null;
--16241280
select count(*) from gcrm.s_per_comm_ph_email3 as a where a.phone is not null and a.email is not null;

--assessing s_asset_con
--12369495, 12369495, 12369495, 0
select count(*), count(a.contact_id), count(a.asset_id), count(a.src_asset_id) from gcrm.s_asset_con as a;
--12369495, 11555674, 5814486, 0
select count(*), count(distinct a.contact_id), count(distinct a.asset_id), count(distinct a.src_asset_id) from gcrm.s_asset_con as a;

--To find the number of dealers till date, 2430
select
	count(distinct a.ou_num)
from
	gcrm.s_org_ext a,
	gcrm.s_org_ext b
where
	a.row_id = b.par_divn_id
	and b.divn_type_cd is not null;


--A. Data Gathering and Preprocessing: SMS Campaigns
--Q2. Creating a table for month, year and mobile numbers contacted for each SMS campaign using name of the flat files. Here name of the flat file corresponds to the respective SMS campaign.
create table gcrm.sms_contacts (
	sms_year varchar(40) NULL,
	sms_month varchar(20) NULL,
	sms_filename varchar(100) NULL,
	sms_mobile varchar(40) NULL
);

--Q2a. Loading all 101 flat files into gcrm.sms_contact
copy gcrm.sms_contacts from 'D:/SMS_Contacts/file1.csv' delimiter ',' quote '"' csv header;
copy gcrm.sms_contacts from 'D:/SMS_Contacts/file101.csv' delimiter ',' quote '"' csv header;

--Q3. Creating a table containing list of distinct mobile numbers contacted for SMS campaigns, 6549074
create table gcrm.sms_contacts_dist as
select
	distinct b.sms_mobile
from
	gcrm.sms_contacts as b; 

--Q4. Creating a table for per_ids and phones from s_per_comm_addr, 22449017
create table s_per_comm_addr_ph1 as
select
	distinct a.per_id,
	a.phone
from
	s_per_comm_addr as a
where
	a.comm_medium_cd = 'Phone';


--Q5. Obtaining the contact details like per_ids of those mobile numbers contacted for SMS campaigns from s_per_comm_addr_ph1, 52323781
create table gcrm.sms_contacts_2 as
select
	distinct a.*,
	b.per_id
from
	gcrm.sms_contacts as a
left outer join s_per_comm_addr_ph1 as b on
	a.sms_mobile = b.phone;

--Q6. Obtaining asset_ids of those mobile numbers contacted for SMS campaigns from s_asset_con using per_id, 65740265
create table gcrm.sms_contacts_3 as
select
	distinct a.*,
	b.asset_id
from
	gcrm.sms_contacts_2 as a
left outer join gcrm.s_asset_con as b on
	a.per_id = b.contact_id;

--Q7. Table for list of all 101 flat files
create table gcrm.sms_comb_file_names (
    sms_filename varchar(300) NULL,
	combinedv3_SMScamp_name varchar(100) NULL,    
    target_base_desc varchar(100) NULL,	
	sms_campaign_name varchar(300) NULL,
	sms_year varchar(4) null.
	sms_month varchar(4) NULL
);

--Q7a
copy gcrm.sms_comb_file_names from 'D:\Comparison - Combined and SMS File Names.csv' delimiter ',' quote '"' csv header;

--Q7b Removing campaign 'All_Mumbai_Customers_2005_to_July17_June2018' as it in not in the given list of campaigns
delete from	gcrm.sms_comb_file_names where sms_campaign_name = 'All_Mumbai_Customers_2005_to_July17_June2018';

--Q7c Applying corrections to sms_comb_file_names
update gcrm.sms_comb_file_names set sms_year = '2017', sms_month = 'July' where sms_campaign_name = 'ExtendedWarrantySMS_January2017-DND Number Not Available';
update gcrm.sms_comb_file_names set sms_campaign_name = 'FCCC_AllRegionsExceptSRO4_3rdYear&AboveCustomers_April2017' where sms_campaign_name = 'FCCC_AllRegionsExceptSRO4_3rdYear&AboveCustomers_March2017' and sms_year = '2017' and sms_month = 'April';
update gcrm.sms_comb_file_names set sms_campaign_name = 'FCCC_AllRegionsExceptSRO4_3rdYear&AboveCustomers_April2017' where sms_campaign_name = 'FCCC_AllRegionsExceptSRO4_1st&2ndYearCustomer_March2017' and sms_year = '2017' and sms_month = 'April';
update gcrm.sms_comb_file_names set sms_campaign_name = 'All_Mumbai_Customers_2005_to_July17_September2017' where sms_campaign_name = 'All_Mumbai_Customers_2005_to_July17_August2017' and sms_year = '2017' and sms_month = 'September';
update gcrm.sms_comb_file_names set sms_campaign_name = 'Monsoon Car Care Clinic_2014_to_July2017' where sms_campaign_name like 'Monsoon Car Care Clinic_2014_to_July%';
update gcrm.sms_comb_file_names set sms_campaign_name = 'FCC for SRO3 Customers_2013 to 2017_April2018' where sms_campaign_name like 'FCC for SRO3 Customers_2013 to 2017_April%';
alter table gcrm.sms_comb_file_names add column camp_id varchar(15);
alter table gcrm.sms_comb_file_names add column prog_start_dt timestamp;
alter table gcrm.sms_comb_file_names add column prog_end_dt timestamp;

--Q8. Now bringing in combinedv3_smscamp_name and sms_campaign_name from gcrm.sms_comb_file_names
create table gcrm.sms_contacts_4 as
select
	distinct a.*,
	b.combinedv3_smscamp_name,
	b.sms_campaign_name
from
	gcrm.sms_contacts_3 as a
left outer join gcrm.sms_comb_file_names as b on
	a.sms_filename = b.sms_filename
	and a.sms_month = b.sms_month
	and a.sms_year = b.sms_year;

--Q9. Creating source table for all 49 finalised campaigns
create table analysis.our_s_src (
       new_camp_id varchar(20) NULL,
       new_campaign_disp_name varchar(100) NULL,
       channel_clubbed varchar(20) NULL,
       prog_start_dt_new timestamp NULL,
       prog_end_dt_new timestamp NULL,
       ageofvehicle_targeted varchar(20) NULL,
       models_targeted varchar(50) NULL,
       campaign_type varchar(20) NULL,
       camp_sub_type varchar(20) NULL,
       frequency varchar(20) NULL,
       region varchar(75) null,
       SMS_sent numeric (15,2) Null,
       Budget numeric (15,2) null
);

--Q9a
copy gcrm.our_s_src from 'D:/Campaigns List V0 2- Jatin -25thNov V2 - dashboard.csv' delimiter ',' quote '"' csv header;

--Q10. Bringing in additional columns like new_camp_id, new_campaign_disp_name, channel_clubbed, campaign_type, prog_start_dt_new and prog_end_dt_new from source table
create table gcrm.sms_contacts_5 as
select
	a.*,
	b.old_camp_id,
	b.new_camp_id,
	b.channel_clubbed,
	b.new_campaign_disp_name,
	b.region,
	b.campaign_type,
	b.camp_sub_cat,
	b.prog_start_dt_new,
	b.prog_end_dt_new
from
	gcrm.sms_contacts_4 as a
left outer join gcrm.our_s_src as b on
	a.sms_campaign_name = b.old_campaign_name;

--Q10a. Keeping only the required columns
create table gcrm.sms_contacts_6 as
select
	a.new_camp_id,
	a.old_camp_id,
	a.channel_clubbed,
	a.per_id,
	a.asset_id,
	a.new_campaign_disp_name,
	a.sms_campaign_name,
	a.campaign_type,
	a.sms_mobile,
	a.sms_month,
	a.sms_year,
	a.prog_start_dt_new,
	a.prog_end_dt_new
from
	gcrm.sms_contacts_5 as a;

--57253923, 7888733
select count(a.per_id), count(distinct a.per_id) from gcrm.sms_contacts_6 as a;

--Q11a. Bringing in VIN from s_asset using asset_id
create table gcrm.sms_cont_vin_7 as
select
	a.*,
	b.asset_num
from
	gcrm.sms_contacts_6 as a
left outer join gcrm.s_asset as b on
	a.asset_id = b.row_id;

--Q11b
create table gcrm.sms_only1 as select a.old_camp_id, a.new_camp_id, a.new_campaign_disp_name, a.per_id as contact_id, a.asset_id, a.asset_num as vin, a.prog_start_dt_new, a.prog_end_dt_new, a.channel_clubbed from gcrm.sms_cont_vin_7 as a where a.channel_clubbed = 'SMS only';
create table gcrm.sms_only1_count as select a.new_camp_id, a.new_campaign_disp_name, count(*) as row_count, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.asset_id) as asset_id, count(distinct a.asset_id) as asset_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist from gcrm.sms_only1 as a group by 1, 2;

--Removing contact ids that are null
--Q11c
create table gcrm.sms_only3 as select distinct a.new_camp_id, a.new_campaign_disp_name, a.contact_id, a.asset_id, a.vin, a.prog_start_dt_new, a.prog_end_dt_new, a.channel_clubbed from gcrm.sms_only1 as a where a.contact_id is not null;
create table gcrm.sms_only3_count as select a.new_camp_id, a.new_campaign_disp_name, count(*) as row_count, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.asset_id) as asset_id, count(distinct a.asset_id) as asset_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist from gcrm.sms_only2 as a group by 1, 2;

--Part B. Data Gathering Preprocessing: Email Campaigns
--Initially there were 66 email campaigns (52 + 14)
--Q12. Five email campaigns with con_per_ids from s_camp_con
--6383270
create table camp_con_5_1 as
select
	distinct a.src_id as camp_id,
	a.con_per_id,
	a.prsp_con_per_id
from
	s_camp_con as a
where
	a.src_id in ('1-17OVJ5H','1-1EDYJB6','1-1F2I7QH','1-1FGSQR5','1-1FZ04OB');
	
--Q13. Asset ids from s_asset_con for con_per_ids of those five email campaigns
--7132506
create table gcrm.camp_con_5_2 as
select
	a.camp_id,
	a.con_per_id,
	b.contact_id,
	b.asset_id
from
	gcrm.camp_con_5_1 as a
left outer join gcrm.s_asset_con as b on
	a.con_per_id = b.contact_id;

--Analysis of prospects
--Q14. Creating a table with list of distinct prsp_con_per_ids for the 27 campaigns with only prospects
--7447268
create table gcrm.dist_prosp_27 as
select
	distinct a.prsp_con_per_id
from
	s_camp_con as a
where
	a.src_id in ('1-ANFRFX','1-AXH9AX','1-CQV09V','1-GDE874','1-HH7IWN','1-BR7XJ4','1-FPG6T5','1-FCGO5Q','1-G5QMCP','1-I7S8MD','1-KGWAX9','1-KGWBGZ','1-HLQOFL','1-P3CLGG','1-BR7XQF','1-J39WPC','1-EIEJ79','1-F29BMX','1-JEQ4XN','1-BR7Y3X','1-GDE84T','1-ED6724','1-P3CLPH','1-QAA78U','1-U7XQH9','1-DG2D0E','1-D8FDZP');

--Q15. Creating a table for contact details of the above list of prsp_con_per_ids by merging it with s_prsp_contact
--7447268
create table gcrm.prosp_cont_27 as
select
	a.prsp_con_per_id,
	b.last_name,
	b.email_addr,
	b.full_name,
	b.fst_name,
	b.city
from
	dist_prosp_27 as a
left outer join s_prsp_contact as b on
	a.prsp_con_per_id = b.row_id;

--43
select count(*) from gcrm.prosp_cont_27 as a where a.last_name is null or a.email_addr is null;

--Q16. Creating a table for those prospects with entries in s_contact(to identify if they are also owners of hyundai cars) using email_addr and last_name
--7513570
create table gcrm.prosp_s_cont_27 as
select
	a.prsp_con_per_id,
	b.row_id,
	a.email_addr as prosp_email,
	b.email_addr as email,
	a.last_name as prosp_last_name,
	b.last_name
from
	prosp_cont_27 as a
left outer join s_contact as b on
	(a.email_addr = b.email_addr and a.last_name = b.last_name);

--some checks
--236800
select count(*) from gcrm.prosp_s_cont_27 as a where a.email = a.prosp_email and a.last_name = a.prosp_last_name;
--236800
select count(*) from gcrm.prosp_s_cont_27 as a where a.email = a.prosp_email;

--Q17. To identify if the above list of prospects with entries in s_contact also have asset_nums(VIN) in s_asset
--7514224
create table gcrm.prosp_asset_27 as
select
	a.row_id,
	b.pr_con_id,
	b.asset_num,
	b.pr_asset_id
from
	prosp_s_cont_27 as a
left outer join s_asset as b on
	a.row_id = b.pr_con_id;

--some checks
--45540
select count(*) from gcrm.prosp_asset_27 as a where a.asset_num is not null;
--36826
select count(distinct a.asset_num) from gcrm.prosp_asset_27 as a;
--36280
select count(distinct a.pr_con_id) from gcrm.prosp_asset_27 as a;
--211778
select count(distinct a.row_id) from gcrm.prosp_asset_27 as a;
--45540
select count(*) from gcrm.prosp_asset_27 as a where a.row_id = a.pr_con_id;

--Q18. Creating a table for those prospects with entries in s_contact(to identify if they are also owners of hyundai cars) using only email_addr, not last_name
--Below query takes more than 6500 secs(doesn't end)
create table prosp_s_cont_27_email as
select
	a.prsp_con_per_id,
	b.row_id,
	a.email_addr as prosp_email,
	b.email_addr as email,
	a.last_name as prosp_last_name,
	b.last_name
from
	prosp_cont_27 as a
left outer join s_contact as b on
	(a.email_addr = b.email_addr);

--Q19. prsp_con_per_ids for 27 email campaigns with only prospects
--7522599
create table prosp_asset_con_27 as
select
	a.row_id,
	b.contact_id,
	b.asset_id
from
	prosp_s_cont_27 as a
left outer join s_asset_con as b on
	a.row_id = b.contact_id;

--Q20. Asset ids from s_asset_con for con_per_ids of those five email campaigns
--7522599
create table prosp_ast_con_ast_27 as
select
	a.row_id,
	a.contact_id,
	a.asset_id,
	b.row_id as ast_row_id,
	b.pr_con_id,
	b.asset_num,
	b.pr_asset_id
from
	prosp_asset_con_27 as a
left outer join s_asset as b on
	a.asset_id = b.row_id;

--Q21. Creating a table for camp_id and prsp_con_per_ids for the 27 campaigns with only prospects
--9853942
create table gcrm.camp_con_27_1 as
select distinct
	a.src_id as camp_id,
	a.con_per_id,
	a.prsp_con_per_id
from
	s_camp_con as a
where
	a.src_id in ('1-154L44P','1-ANFRFX','1-AXH9AX','1-BR7XJ4','1-BR7XQF','1-BR7Y3X','1-CQV09V','1-D8FDZP','1-DG2D0E','1-ED6724','1-EIEJ79','1-F29BMX','1-FCGO5Q','1-FPG6T5','1-GDE84T','1-GDE874','1-HH7IWN','1-HLQOFL','1-I7S8MD','1-J39WPC','1-JEQ4XN','1-KGWAX9','1-KGWBGZ','1-P3CLGG','1-P3CLPH','1-QAA78U','1-T1YOOF');

--Q22. Joining those 27 campaigns and its prospects with s_prsp_contact for prospects' row_id, email, last name and phone
--9853942
create table gcrm.camp_con_27_2 as
select
	a.*,
	b.row_id as prsp_row_id,
	b.email_addr as prsp_email,
	b.last_name as prsp_l_name,
	b.cell_ph_num as prsp_phone
from
	gcrm.camp_con_27_1 as a
left outer join s_prsp_contact as b on
	a.prsp_con_per_id = b.row_id;

--Q23. Creating a table to store counts of records, prospects and distinct prospects for each camp_id
create table gcrm.camp_con_27_2_count as
select
	a.camp_id,
	count(*),
	count(a.prsp_row_id),
	count(distinct a.prsp_row_id)
from
	gcrm.camp_con_27_2 as a
group by 1;

--Check
select
	camp_id,
	prsp_email,
	prsp_l_name,
	count(*)
from
	camp_con_27_2
group by 1, 2, 3
having count(*) > 500;

--Q24. Creating a table for those prospects with entries in s_contact(to identify if they are also owners of hyundai cars) using both email_addr and last_name
--10524063
create table camp_con_27_3 as
select
	a.*,
	b.row_id as cont_row_id,
	b.cell_ph_num
from
	camp_con_27_2 as a
left outer join s_contact as b on
	lower(trim(a.prsp_email)) = lower(trim(b.email_addr))
	and lower(trim(a.prsp_l_name)) = lower(trim(b.last_name));

--Q25. Grabbing the asset_ids of those prospects who had entries in s_contact
--10678148
create table gcrm.camp_con_27_4 as
select
	a.*,
	b.asset_id,
	b.row_id as asset_con_row_id
from
	gcrm.camp_con_27_3 as a
left outer join gcrm.s_asset_con b on
a.cont_row_id = b.contact_id;

--Q26. Creating a table to store counts of records, asset_ids and distinct asset_ids for each of those 27 campaigns
create table gcrm.camp_con_27_4_count as
select
	a.camp_id,
	count(*),
	count(a.asset_id),
	count(distinct a.asset_id)
from
	gcrm.camp_con_27_4 as a
group by 1;

--Q27. Pulling out src, con_per & prsp_con_per from camp_con for 14 more campaigns (small camp_con for only 14 campaigns)
--37,34,134
create table gcrm.a_camp_con_14 as
select distinct
	src_id,
	con_per_id,
	prsp_con_per_id
from
	gcrm.s_camp_con
where
	src_id in ('1-CQV092','1-G5QMCP','1-P3CLFK','1-P3CLFN','1-BR7XPG','1-BR7XQ9','1-ED671B','1-19W84A2','1-ZPNIVN','1-U7XQH9','1-VYE9WV','1-RUISW7','1-1163Q16','1-GMAW9H');

--Q28. Out of those 14 campaigns, three only have contacts
--41,41,176
create table gcrm.a_camp_con_14_contact as
select
	a.src_id,
	a.con_per_id,
	b.asset_id
from
	gcrm.a_camp_con_14 as a
left outer join gcrm.s_asset_con as b on
	b.contact_id = a.con_per_id
where
	a.src_id in ('1-1163Q16','1-RUISW7','1-VYE9WV');

--Q29a. Combining 5 and 3 email campaigns with contacts
--1-17OVJ5H,1-1EDYJB6,1-1F2I7QH,1-1FGSQR5,1-1FZ04OB,1-1163Q16,1-RUISW7 and 1-VYE9WV
create table gcrm.camp_con_8 as
select * from gcrm.camp_con_5_2;	

--Q29b. 1,10,05,402
insert into	gcrm.camp_con_8(camp_id, con_per_id, asset_id)
select a.src_id, a.con_per_id, a.asset_id
from gcrm.a_camp_con_14_contact as a
where a.asset_id is not null or a.con_per_id is not null;

--Q30. Out of eight email campaigns with contacts, 1-1163Q16 has very less number of VINs, hence ignoring 1-1163Q16
--1,09,94,265
create table gcrm.camp_con_8_2 as
select	*
from
	gcrm.camp_con_8
where
	camp_id in ('1-1FGSQR5','1-1FZ04OB','1-AXH9AX','1-HLQOFL','1-QAA78U','1-1F2I7QH','1-17OVJ5H','1-G5QMCP','1-T1YOOF','1-VYE9WV','1-HH7IWN','1-ANFRFX','1-RUISW7','1-U7XQH9','1-P3CLPH','1-154L44P','1-1EDYJB6');

--Q31. Grabbing row_id from s_camp_con
--1,11,24,777
create table gcrm.camp_con_8_3 as 
select
	a.camp_id,
	a.con_per_id,
	b.row_id as camp_con_row_id
from
	gcrm.camp_con_8_2 as a,
	gcrm.s_camp_con as b
where
	a.camp_id = b.src_id
	and a.con_per_id = b.con_per_id;

--Q32. Obtaining last name, email address and row id of all prospects of those 14 campaigns
--1,25,368
create table gcrm.a_camp_con_14_prsp_con as
select
	distinct a.src_id,
	a.prsp_con_per_id,
	b.last_name,
	b.email_addr,
	b.row_id
from
	gcrm.a_camp_con_14 as a
left outer join gcrm.s_prsp_contact as b on
	a.prsp_con_per_id = b.row_id;

--Q33. Only two email campaigns had considerable number of VINs, obtaining row_ids from s_contact for those two using last name and email address
--1,30,578
create table gcrm.a_CAMP_con_14_prsp_con_contact as
select distinct
	a.src_id,
	a.prsp_con_per_id,
	a.last_name,
	a.email_addr,
	b.row_id
from
	gcrm.a_camp_con_14_prsp_con as a
left outer join gcrm.s_contact as b on
	b.email_addr = a.email_addr
	and b.last_name = a.last_name
	where a.src_id in ('1-G5QMCP', '1-U7XQH9');

--Q34. Getting the asset ids for those prospects
--1,31,376
create table gcrm.a_CAMP_con_14_prsp_con_contact_end as
select
	distinct a.src_id,
	a.prsp_con_per_id,
	a.row_id,
	b.asset_id
from
	gcrm.a_CAMP_con_14_prsp_con_contact as a
left outer join gcrm.s_asset_con as b on
	a.row_id = b.contact_id;

--Q35. Keeping only the valid 17 email and both campaigns
create table gcrm.fact_table_RO as 
select distinct a.row_id , a.src_id , a.asset_id 
from  a_camp_con_14_prsp_con_contact_end a
where src_id in ('1-QAA78U','1-1F2I7QH','1-17OVJ5H','1-1EDYJB6','1-1FGSQR5','1-1FZ04OB','1-VYE9WV','1-RUISW7','1-ANFRFX','1-P3CLPH','1-G5QMCP','1-U7XQH9','1-154L44P','1-HLQOFL','1-AXH9AX','1-T1YOOF','1-HH7IWN');

--Exclusion List: Contacts with multiple VINs(greater than 3)
--Q36a. Creating list of contact_ids with more than three VINs, leaving car leasing companies (list given by business)
create table con_vin_disc as
select contact_id, count(*) as asst_ct from gcrm.s_asset_con
group by 1
having count(*) >3
order by count(*) desc;

--Q36b
create table g3_ocmv_con as
select
	distinct a.*,
	b.last_name,
	b.con_cd,
	b.sex_mf,
	b.email_addr,
	b.cell_ph_num
from
	gcrm.con_vin_disc as a
inner join gcrm.s_contact as b on
	a.contact_id = b.row_id;
              
--Q36c
create table g3_fleet20 as
select
	contact_id
from
	g3_ocmv_con as a
where
	lower(trim(a.last_name)) like '%clix%'
	or lower(trim(a.last_name)) like '%ge capital%'
	or lower(trim(a.last_name)) like '%good morning lease%'
	or lower(trim(a.last_name)) like '%lease plan%'
	or lower(trim(a.last_name)) like '%lnt finance%'
	or lower(trim(a.last_name)) like '%magma%'
	or lower(trim(a.last_name)) like '%orix%'
	or lower(trim(a.last_name)) like '%smas leasing%'
	or lower(trim(a.last_name)) like '%sumitomo leasing%'
	or lower(trim(a.last_name)) like '%sundaram lease%'
	or lower(trim(a.last_name)) like '%tata capital%'
	or lower(trim(a.last_name)) like '%ald / hyundai leasing%'
	or lower(trim(a.last_name)) like '%arval%'
	or lower(trim(a.last_name)) like '%avis lease%'
	or lower(trim(a.last_name)) like '%bmw leasing%'
	or lower(trim(a.last_name)) like '%bnp lease%'
	or lower(trim(a.last_name)) like '%tranzlease holding (i) pvt ltd.%'
	or lower(trim(a.last_name)) like '%ola fleet%'
	or lower(trim(a.last_name)) like '%carzonrent%'
	or lower(trim(a.last_name)) like '%zoomcar%';

--Q36d. 22,937 contacts
create table g3_ocmv_exclutionlist as
select a.contact_id from g3_ocmv_con as a 
where a.contact_id not in (select distinct b.contact_id from g3_fleet20 as b);

--Q36e. 22,937
create table gcrm.g3_ocmv_exclutionlist (
	contact_id varchar(15) null
);
--Q36f
copy gcrm.g3_ocmv_exclutionlist from 'D:/g3_ocmv_exclutionlist_201911221103.csv' delimiter ',' quote '"' csv header;

--Q37. Removing those contacts in ocmv_exclutionlist
--12266232
create table gcrm.fact_table_RO_1  as
select * from gcrm.fact_table_RO
where row_id not in (select * from ndms.g3_ocmv_exclutionlist);

--Q38. Getting camp names, channel name, prog start and end dates for 17 campaigns
--1,22,66,232
create table gcrm.fact_table_RO_2 as
select
	distinct src.row_id as camp_id,
	camp.row_id as contact_id,
	veh.asset_num as vin,
	camp.asset_id,
	date(src.prog_start_dt) as prog_start_dt,
	date(src.prog_end_dt) as prog_end_dt,
	src."name" as camp_name,
	(case
		when src.prog_start_dt is not null then 'EMAIL'
	end )as channel_name
from
	gcrm.fact_table_RO_1 as camp
left outer join s_src as src on
	src.row_id = camp.src_id
left outer join s_asset as veh on
	veh.row_id = camp.asset_id;

--Q38. Removing contacts in g3_ocmv_exclutionlist
--1,21,40,803
create table gcrm.final_fact_email as
select
	*
from
	gcrm.fact_table_ro_2 as a
where
	a.contact_id not in (
	select
		*
	from
		gcrm.g3_ocmv_exclutionlist);

--Q39. Getting new campaign display names, channel clubbed, new prog start and end dates for 17 campaigns from source table
--1,17,28,921
create table most_final_fact_email as
select 
	a.*,
	b.old_camp_id ,
	b.new_camp_id,
	b.new_campaign_disp_name,
	b.prog_start_dt_new,
	b.prog_end_dt_new,
	b.channel_clubbed
from
	gcrm.final_fact_email as a
left outer join gcrm.our_s_src as b on
	a.camp_id = b.old_camp_id;

--Q39a. Email Only
create table gcrm.really_again as
select * from gcrm.most_final_fact_email where channel_clubbed='Email only';
	
--Part C. Now combining all three channels types(SMS, Email and Both)
--Q40a. Only Both - 25500426, 5438066 (Email both), 20062360 (SMS Both)
create table gcrm.both_details as
select
	b.old_camp_id,
	b.new_camp_id,
	b.new_campaign_disp_name,
	b.contact_id,
	b.asset_id,
	b.vin,
	b.prog_start_dt_new,
	b.prog_end_dt_new,
	b.channel_clubbed,
from
	gcrm.most_final_fact_email as b
where
	b.channel_clubbed = 'Email only';
union all
select
	a.old_camp_id,
	a.new_camp_id,
	a.new_campaign_disp_name,
	a.per_id as contact_id,
	a.asset_id,
	a.asset_num as vin,
	a.prog_start_dt_new,
	a.prog_end_dt_new,
	a.channel_clubbed,
	'SMS' as channel_name
from
	gcrm.sms_cont_vin_7 as a
where
	a.channel_clubbed = 'Both';

--Q40b. Creating a table to store campaign-wise counts and distinct counts of contact_ids, asset_ids and vins for all 49 campaigns (32 SMS only + 9 Both + 8 Email only)
create table gcrm.both_details_count as select a.new_camp_id, a.new_campaign_disp_name, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.asset_id) as asset_id, count(distinct a.asset_id) as asset_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist from gcrm.both_details as a group by 1, 2;

--Q40c. Both with contact ids not null 
--18264778
create table gcrm.both_details2 as select distinct b.new_camp_id, b.new_campaign_disp_name,	b.contact_id, b.asset_id, b.vin, b.prog_start_dt_new, b.prog_end_dt_new, b.channel_clubbed from	gcrm.both_details as b where CONTACT_ID is not null;

--Part D - Bringing in RO details for all three types
--Q41. All three types with contact ids not null, 56160210
create table gcrm.all_three1 as
select a.new_camp_id, a.new_campaign_disp_name, a.contact_id, a.asset_id, a.vin, a.prog_start_dt_new, a.prog_end_dt_new, a.channel_clubbed from gcrm.both_details2 as a
union all
select b.new_camp_id, b.new_campaign_disp_name, b.contact_id, b.asset_id, b.vin, b.prog_start_dt_new, b.prog_end_dt_new, b.channel_clubbed from gcrm.sms_only3 as b
union all
select c.new_camp_id, c.new_campaign_disp_name, c.contact_id, c.asset_id, c.vin, c.prog_start_dt_new, c.prog_end_dt_new, c.channel_clubbed from gcrm.really_again as c;

--Q41a. Creating a table to store campaign-wise counts and distinct counts of contact_ids, asset_ids and vins for all 49 campaigns (32 SMS only + 9 Both + 8 Email only)
create table gcrm.all_three1_count as select a.new_camp_id, a.new_campaign_disp_name, count(*) as row_count, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist  from gcrm.all_three1 as a group by 1, 2;

--Q42. All three where asset ids and vins are not null, vin null check only is enough, 43978714
create table gcrm.all_three2 as select * from gcrm.all_three1 as a where a.vin is not null;
--Q42a
create table gcrm.all_three2_count as select a.new_camp_id, a.new_campaign_disp_name, count(*) as row_count, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist  from gcrm.all_three2 as a group by 1, 2;

--Q43. All three, excluding contact_ids with more than three VINs(g3_ocmv_exclutionlist), 42129869
create table gcrm.all_three3 as select * from gcrm.all_three2 as a where a.contact_id not in (select b.contact_id from gcrm.g3_ocmv_exclutionlist as b);
--Q43a
create table gcrm.all_three3_count as select a.new_camp_id, a.new_campaign_disp_name, count(*) as row_count, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist  from gcrm.all_three2 as a group by 1, 2;

--Q44. Bringing in RO details like total RO amount, RO work type, number and respective dealer
--42319551
create table gcrm.all_three_fact1 as
select
	mi.new_campaign_disp_name,
	mi.new_camp_id,
	mi.vin,
	mi.channel_clubbed,
	mi.asset_id,
	mi.contact_id,
	mi.prog_start_dt_new,
	mi.prog_end_dt_new,
	up1.repm_ro_dtime,
	(up1.repm_bill_total_labr_amt + up1.repm_bill_total_othr_amt + up1.repm_bill_total_part_amt) as total_sales_amount,
	up1.repm_work_type,
	up1.repm_ro_no,
	up1.repm_dlr_no,
	(case 
		when up1.repm_work_type ='RR' then 1
		else 0
	end ) as ind_rr,
	(case 
		when up1.repm_work_type ='FS' then 1
		else 0
	end ) as ind_fs,
	(case 
		when up1.repm_work_type ='PS' then 1
		else 0
	end ) as ind_ps
from
	gcrm.all_three3 as mi
left outer join gcrm.ser_rcrepm_tb_4yr as up1 on
	up1.repm_vin = mi.vin
	and date(up1.repm_ro_dtime) between mi.prog_start_dt_new and mi.prog_end_dt_new
	and up1.repm_work_type in ('RR','FS','PS');

--Q45. Creating indicators for those who had placed at least an RO, type of work and numer of ROs placed in each type
--42129869
create table gcrm.all_three_fact2 as
select
	mi.new_campaign_disp_name,
	mi.new_camp_id,
	mi.vin,
	mi.channel_clubbed,
	mi.asset_id,
	mi.contact_id,
	mi.prog_start_dt_new,
	mi.prog_end_dt_new,
	sum(mi.total_sales_amount) as total_ro_amount,
	count(repm_ro_no) as ro_count,
	(case
		when count(mi.repm_ro_no) > 0 then 1
		else 0
	end ) as bin_ro,
	max(ind_rr) as ind_rr,
	max(ind_ps) as ind_ps,
	max(ind_fs) as ind_fs,
	sum(ind_rr) as rr_count,
	sum(ind_ps) as ps_count,
	sum(ind_fs) as fs_count
from
	gcrm.all_three_fact1_deepa as mi
group by
	mi.new_campaign_disp_name,
	mi.new_camp_id,
	mi.vin,
	mi.channel_clubbed,
	mi.asset_id,
	mi.contact_id,
	mi.prog_start_dt_new,
	mi.prog_end_dt_new;

--QC Check
select count(a.*) from gcrm.all_three_fact2 a where contact_id not in (select distinct contact_id from gcrm.contact_analysis_master_2);

--Q46a. Creating a contact table with only contact id, contact code, per title. per addr id and sex
create table gcrm.contact_analysis_master as 
select distinct a.row_id as contact_id , CON_CD, PER_TITLE , PR_PER_ADDR_ID, SEX_MF
from gcrm.s_contact as a;

--Q46b. Joining with s_addr_per using row_id to get city
-- 27,274,227 
create table gcrm.contact_analysis_master_1 as
select A.*, B.CITY
from gcrm.contact_analysis_master A 
left outer join gcrm.s_addr_per B on A.PR_PER_ADDR_ID = b.row_id;

--Q46c. Creating mapping table for city, state, region and zone using mapping given by business
create table city_mapping_final
(City_Code	varchar(20),City varchar(20),State varchar(20),Region varchar(20),zone varchar(20)
);	
copy gcrm.city_mapping_final from 'D:/CITY_MAPPING_FINAL_CSV.csv' delimiter ',' quote '"' csv header;

--Q46d. Now getting city, state, region and zone uing city code
create table gcrm.contact_analysis_master_2 as
select a.*, b.city as con_city_name, b.state as con_state, b.region as con_region , b.zone as con_zone
from gcrm.contact_analysis_master_1 as a 
left outer join  gcrm.city_mapping_final b on a.city = b.city_code;

--Q47a. Fact with contact details
--42129869
create table gcrm.fact_contact as
select fact.*, con.con_cd, con.sex_mf, con.city as city_code from gcrm.all_three_fact2 fact
left outer join gcrm.contact_analysis_master_2 con
on fact.contact_id = con.contact_id;

--Q47b. Fact_contact with campaign type
create table gcrm.fact_contact_camptype as
select fact.*, camp.campaign_type from gcrm.fact_contact fact
left outer join gcrm.our_s_src camp
on fact.new_camp_id = camp.new_camp_id;

--Q48. Fact for only Camps & Events
--32569421
create table gcrm.fact_camp_events as
select * from fact_contact_camptype
where campaign_type = 'Camps & Events';

--Excluding extreme RO values based on the car model and RO value
--Q50. Creating fact_camp_events2 with model column, 32569425
create table gcrm.fact_camp_events2 as select a.*, b.model_cd from gcrm.fact_camp_events as a left outer join gcrm.s_asset as b on a.vin = b.asset_num;
--149
delete from gcrm.fact_camp_events2 as a where a.total_ro_amount >= 200000;
--141
delete from gcrm.fact_camp_events2 as a where a.total_ro_amount >= 150000 AND a.total_ro_amount < 200000 AND a.model_cd IN ('New Verna','i20','Grand i10','Verna','Xcent','Santro','i10','New i20','Creta','Accent','Sonata','Getz','New Sonata','i20 Active','Eon');
--214
delete from gcrm.fact_camp_events2 as a where a.total_ro_amount >= 100000 AND a.total_ro_amount < 150000 AND a.model_cd IN ('Grand i10','Xcent','Santro','i10','Accent','Getz','Eon');
--(32569425-149-141-214) = 32568921

--Q51. Creating a table to store campaign-wise counts and distinct counts of contact_ids, asset_ids, vins, ROs and sum of ROs for all 49 campaigns (32 SMS only + 9 Both + 8 Email only)
create table gcrm.fact_camp_events2_count as select a.new_camp_id, a.new_campaign_disp_name, count(*) as row_count, count(a.contact_id) as contact_id, count(distinct a.contact_id) as contact_dist, count(a.vin) as vin, count(distinct a.vin) as vin_dist, count(a.total_ro_amount) as totamt_cnt, count(nullif(a.total_ro_amount,0)) as ro_non0_cnt, sum(a.total_ro_amount) as total_ro_val  from gcrm.fact_camp_events2 as a group by 1, 2;

--Q52a
create table gcrm.max_rodtime_details as
select
	camp_id,
	contact_id,
	vin,
	max (repm_ro_dtime) as max_rodt
from
	gcrm.all_three_fact1
where
	vin is not null
	and repm_ro_dtime is not null
	and repm_ro_no is not null
group by camp_id, contact_id, vin;

--Q52b
create table gcrm.ro_dimension as
select
	distinct mi.camp_id,
	mi.camp_name,
	mi.contact_id,
	mi.vin,
	mi.channel_name,
	mi.repm_dlr_no as Ro_dealer,
	up1.max_rodt as max_ro_dtime,
	mi.repm_ro_no,
	mi.repm_milg,
	mi.repm_work_type
from
	gcrm.camp_details_17 as mi
inner join gcrm.max_rodtime_details as up1 on
	up1.camp_id = mi.camp_id
	and up1.contact_id = mi.contact_id
	and up1.vin = mi.vin
	and up1.max_rodt = mi.repm_ro_dtime;

--Q52c. Bringing in all features under one table - RO, contact, vehicle and campaign
create table gcrm.fact_all as
select
	fact.*,
	ro.ro_dealer,
	ro.repm_ro_no,
	ro.repm_milg,
	ro.max_ro_dtime,
	ro.ro_state,
	ro.ro_region,
	ro.ro_zone,
	ro.active_from,
	ro.alias_name,
	asset.model_yr,
	asset.fuel_cd,
	asset.ext_color_cd,
	asset.warranty_start_dt,
	asset.warranty_end_dt,
	asset.dlr_id,
	asset.registered_dt,
	camp.ageofvehicle_targeted,
	camp.models_targeted ,
	camp.camp_sub_type,
	camp.frequency,
	camp.region,
	camp.SMS_sent,
	camp.Budget,
	city.city,
	city.statecode,
	city.state,
	city.region_new,
	city.zone
from
	gcrm.fact_camp_events2 fact
left join gcrm.ro_dimension ro on
	fact.new_camp_id = ro.new_camp_id
	and fact.contact_id = ro.contact_id
	and fact.vin = ro.vin
left join gcrm.s_asset asset on
	fact.asset_id = asset.row_id
left join test.camp_master1 camp on
	fact.new_camp_id = camp.new_camp_id
left join test.city_master city on
	fact.city_code = city.city_code;


--Part E - Effectiveness of EW Promotional Campaigns

-- Step 1  - SRC file get EW promotion ids
-- Step 2 - get relevant data from Email camps data
-- Step3 - get relevant data from SMS camps data
-- Step 4 - append above 2 tables 
-- remove contacts with no VIN
-- apply exclusion list on contact id
-- Exclusion list on VINs
-- prepare the Warranty table REg date -JAn2017 - Jun2019 and amount > 500
-- Dealer wise if repetition -  then perform same step by taking by contaid, campid, VIN, max reg date 
-- join the 2 tables 

-- count 86577
create table extended_warnty_1 as
select * from a_camp_con_14_prsp_con_contact_end as a
left outer join our_src as b on b.camp_id = a.src_id where  b.campaign_type='EW Promotion';

--count 73227
create table extended_warnty_2 as
select
	distinct camp.camp_id,
	camp.row_id as contact_id,
	veh.asset_num as vin,
	camp.asset_id,
	date(camp.prog_start_dt) as prog_start_dt,
	date(camp.prog_end_dt) as prog_end_dt,
	camp.campaign_name as camp_name,
	camp.channel as channel_name
from
	gcrm.extended_warnty_1 as camp
left outer join s_asset as veh on
	veh.row_id = camp.asset_id;

--count 69819
create table gcrm.extended_warnty_3  as
select * from gcrm.extended_warnty_2
where contact_id not in ( select * from ndms.g3_ocmv_exclutionlist);

--1,923,916
create table extended_warnty_4 as
select	*
from
	sms_contacts_4 as a
left outer join our_src as b on
	b.campaign_name = a.sms_campaign_name
where
	b.campaign_type = 'EW Promotion' ;

--1,501,616
create table gcrm.extended_warnty_5 as
select
	distinct sc.camp_id,
	sc.per_id as contact_id,
	veh.asset_num as vin,
	sc.asset_id,
	date (sc.prog_start_dt) as prog_start_dt,
	date(sc.prog_end_dt) as prog_end_dt,
	sc.campaign_name as camp_name,
	sc.channel as channel_name
from
	extended_warnty_4 as sc
left outer join s_asset as veh on
	veh.row_id = sc.asset_id;

--1,290,612
create table gcrm.extended_warnty_6  as
select * from gcrm.extended_warnty_5
where contact_id not in ( select * from ndms.g3_ocmv_exclutionlist);

--removing vin nulls
--sms campaign count 9,78,669
create table extended_warnty_7 as 
select * from extended_warnty_6 where vin is not null;

--email campaign 50447
create table extended_warnty_8 as 
select * from extended_warnty_3 where vin is not null;

--appending data from both email and sms campaigns
--count 9,78,669
create table extended_warnty_9 as 
select * from extended_warnty_7;

--50447
insert into extended_warnty_9
select * from extended_warnty_8;

--Extended warranty table  with 2017 to 2019 june and >500 warranty amount
create table extended_warranty_threeyears_data as
select * from ndms.ser_rgextb_tb
where extract( year from date(extb_reg_date))>=2017 and extract ( year from date(extb_reg_date))<=2019;

--1,034,373
create table gcrm.extended_warnty_10 as
select
	distinct sc.camp_id,
	sc.contact_id,
	sc.vin,
	sc.asset_id,
	sc.prog_start_dt,
	sc.prog_end_dt,
	sc.camp_name,
	sc.channel_name,
	sum (am.extb_wrnty_amt) as Total_extb_wrnty_amnt,
	am.extb_dlr_no,
	am.extb_wrnty_no,
	date(am.extb_reg_date) as extb_reg_date
from
	extended_warnty_9 as sc
left outer join extended_warranty_threeyears_data as am on
	am.extb_vin = sc.vin
group by
	sc.camp_id,
	sc.contact_id,
	sc.vin,
	sc.asset_id,
	sc.prog_start_dt,
	sc.prog_end_dt,
	sc.camp_name,
	sc.channel_name,
	am.extb_reg_date,
	am.extb_dlr_no,
	am.extb_wrnty_no;
	
--Bringing in all features under one table - RO, contact, vehicle and campaign
create table gcrm.ew_all as
select
	fact.*,
	asset.model_cd,
	asset.model_yr,
	asset.fuel_cd,
	asset.ext_color_cd,
	asset.warranty_start_dt,
	asset.warranty_end_dt,
	asset.dlr_id,
	asset.registered_dt,
	camp.ageofvehicle_targeted,
	camp.models_targeted ,
	camp.camp_sub_type,
	camp.frequency,
	camp.region,
	camp.SMS_sent,
	camp.Budget,
	contact.con_cd,
	contact.sex_mf,
	contact.city,
	contact.con_city_name,
	contact.con_state,
	contact.con_region,
	contact.con_zone
from
	gcrm.extended_warnty_10 fact
left join gcrm.s_asset asset on
	fact.asset_id = asset.row_id
left join test.camp_master1 camp on
	fact.new_camp_id = camp.new_camp_id
left join test.contact_master contact on
	fact.contact_id = contact.contact_id;


--------------------------------------------------------------------------------------------------------


create table public.fact_all as
select fact.*,
ro.ro_dealer,
ro.repm_ro_no,
   ro.repm_milg,
    ro.max_ro_dtime,
    ro.ro_state,
    ro.ro_region,
    ro.ro_zone,
    ro.active_from,
    ro.alias_name,
    asset.model_yr,
    asset.fuel_cd,
    asset.ext_color_cd,
    asset.warranty_start_dt,
    asset.warranty_end_dt,
    asset.dlr_id,
    asset.registered_dt,
    camp.ageofvehicle_targeted,
    camp.models_targeted ,
       camp.camp_sub_type,
       camp.frequency,
       camp.region,
       camp.SMS_sent,
       camp.Budget,
      city.city,
      city.statecode,
      city.state,
      city.region_new,
      city.zone
    from test.fact fact left join test.ro_dimension ro
    on fact.new_camp_id=ro.new_camp_id
    and fact.contact_id=ro.contact_id
    and fact.vin=ro.vin
    left join gcrm.s_asset asset
    on fact.asset_id=asset.row_id
    left join test.camp_master1 camp
    on fact.new_camp_id=camp.new_camp_id
    left join test.city_master city
    on fact.city_code=city.city_code;
    
CREATE TABLE public.final_groups (
	vin varchar(100) NULL,
	phone varchar(100) NULL,
	email varchar(100) NULL,
	cust_group varchar(15) NULL,
	contact_id varchar(20) NULL
);

select count(distinct cust_group) from public.final_groups;

create table public.final_groups_2 as 
select distinct vin,contact_id,cust_group from public.final_groups;

vacuum public.fact_all;
vacuum public.final_groups_2;
--32,568,926
create table model.final_model as
select a.*,b.cust_group from public.fact_all a left outer join public.final_groups_2 b on a.vin=b.vin and a.contact_id=b.contact_id;

CREATE TABLE model.final_label (
	cust_group varchar(15) NULL,
	labels varchar(15) NULL
);
select count(distinct cust_group) from public.final_groups;
select count(*) from model.final_label;
vacuum model.final_model;
vacuum model.final_label;
--3,25,68,926
create table model.final_model_1 as 
select a.*, b.labels from model.final_model a left outer join model.final_label b on a.cust_group=b.cust_group;
delete from model.final_model_1 where labels is null;
vacuum model.final_model_1;
select count(*) from model.final_model_1 fm where labels is null;

create table model.features_6_v2 as 
select cust_group, sum(case when con_cd='B' then 1 else 0 end) as con_B,
sum(case when con_cd='C' then 1 else 0 end) as con_C,
sum(case when con_cd='E' then 1 else 0 end) as con_E,
sum(case when con_cd='F' then 1 else 0 end) as con_F,
sum(case when con_cd='G' then 1 else 0 end) as con_G,
sum(case when con_cd='I' or con_cd='Individual' then 1 else 0 end) as con_I,
sum(case when con_cd=null then 1 else 0 end) as con_null
from model.final_model_1 group by 1;


create table model.features_7_v2 as 
select cust_group, (case when con_b = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'B'
when con_c = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'C'
when con_e = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'E'
when con_f = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'F'
when con_g = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'G'
when con_i = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'I'
else 'NULL' end) max_con_cd from model.features_6_v2;


create table model.features_9_v2 as 
select cust_group,city_code, count(city_code) from model.final_model_1 group by 1,2;

create table model.features_10_v2 as 
select cust_group,max(count) from model.features_9_v2 group by 1;

--select count(*) from public.features_10;
--27,442
create table model.features_11_v2 as 
select distinct b.cust_group, a.city_code as max_city_cd from model.features_9_v2 a inner join model.features_10_v2 b on a.cust_group=b.cust_group and a.count=b.max;
--select count(*) from public.features_11;--27,442

create table model.features_12_v2 as
select a.cust_group,max(max_city_cd) from model.features_11_v2 a group by 1;

create table model.features_13_v2 as
select a.*, b.max as max_city_cd from model.features_7_v2 a inner join model.features_12_v2 b on a.cust_group =b.cust_group;

UPDATE model.features_13_v2 SET max_city_cd=trim(leading '0' FROM max_city_cd::text);


create table model.features_14_v2 as 
select a.*,b.city,b.region,b.state,b."zone" from model.features_13_v2 a left outer join public.city_mapping_final b on cast(a.max_city_cd as varchar)=b.city_code;
--select max_city_cd,count(*) from public.features_14 group by 1 order by 2 asc;


create table model.features_15_v2 as 
select cust_group, sum(case when camp_sub_type='Festival' then 1 else 0 end) as type_fes,
sum(case when camp_sub_type='Flagship' then 1 else 0 end) as type_fla,
sum(case when camp_sub_type='Others' then 1 else 0 end) as type_oth,
sum(case when camp_sub_type='Seasonal' then 1 else 0 end) as type_sea,
sum(case when camp_sub_type='Special Day' then 1 else 0 end) as type_spe from model.final_model_1 group by 1;

create table model.features_16_v2 as 
select cust_group, (case when type_fes = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Festival'
when type_fla = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Flagship'
when type_oth = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Others'
when type_sea = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Seasonal'
else 'Special Day' end) max_sub_type from model.features_15_v2;

create table model.features_17_v2 as 
select a.*, b.max_sub_type from model.features_14_v2 a inner join model.features_16_v2 b on a.cust_group = b.cust_group;

create table model.features_18_v2 as 
select cust_group, sum(case when frequency='Annual' then 1 else 0 end) as fre_an,
sum(case when frequency='As required' then 1 else 0 end) as fre_as,
sum(case when frequency='Bi-Annual' then 1 else 0 end) as fre_bi,
sum(case when frequency='One-time' then 1 else 0 end) as fre_on from model.final_model_1 group by 1;

create table model.features_19_v2 as 
select cust_group, (case when fre_an = greatest(fre_an,fre_as,fre_bi,fre_on) then 'Annual'
when fre_as = greatest(fre_an,fre_as,fre_bi,fre_on) then 'As required'
when fre_bi = greatest(fre_an,fre_as,fre_bi,fre_on) then 'Bi-Annual'
else 'One-time' end) max_frequency from model.features_18_v2;

create table model.features_20_v2 as 
select a.*, b.max_frequency from model.features_17_v2 a inner join model.features_19_v2 b on a.cust_group = b.cust_group;

create table model.features_21_v2 as 
select cust_group, avg(repm_milg) avg_odo_rd from model.final_model_1 group by 1;

create table model.features_22_v2 as 
select a.*, b.avg_odo_rd from model.features_20_v2 a inner join model.features_21_v2 b on a.cust_group=b.cust_group;

create table model.features_2_v2 as
select cust_group,count(vin) as vin_ct, count(distinct vin) from model.final_model_1 group by 1;

create table model.features_3_v2 as
select a.*, b.vin_ct,b.count as dis_vin_ct from model.features_22_v2 a inner join model.features_2_v2 b on a.cust_group = b.cust_group;

create table model.features_23_v2 as
select cust_group, (case when dis_vin_ct = 1 then 'Single'
else 'Multi' end) car_ct from model.features_3_v2;

create table model.features_24_v2 as 
select a.*, b.car_ct as car_own_ty from model.features_3_v2 a inner join model.features_23_v2 b on a.cust_group=b.cust_group;

create table model.temp_model as 
select cust_group, round((date(prog_start_dt_new)-date(registered_dt))/ 365) as Age_of_vehicle from model.final_model_1;

create table model.features_25_v2 as 
select cust_group, avg(Age_of_vehicle) as avg_veh_age from model.temp_model group by 1;

create table model.features_26_v2 as 
select a.*, b.avg_veh_age from model.features_24_v2 a inner join model.features_25_v2 b on a.cust_group=b.cust_group;

create table model.features_27_v2 as 
select cust_group, (case when avg_veh_age <= 3 then 'Gold(0-3Y)'
         when avg_veh_age <=5 then 'Platinum(4Y-5Y)' 
      when avg_veh_age<=7 then 'Diamond(6Y-7Y)'
      when avg_veh_age<=10 then'Sapphire(8Y-10Y)'
      else 'Loyal(GT 10Y)' end) Vehicle_Age_bin from model.features_26_v2;
      
create table model.features_28_v2 as 
select a.*, b.vehicle_age_bin from model.features_26_v2 a inner join model.features_27_v2 b on a.cust_group=b.cust_group;    

create table model.features_29_v2 as 
select cust_group,  sum(case when fuel_cd='Diesel' then 1 else 0 end) as die,
sum(case when fuel_cd='Gasoline' then 1 else 0 end) as gas,
sum(case when fuel_cd='Leaded Gasoline' then 1 else 0 end) as l_gas,
sum(case when fuel_cd='Petrol' then 1 else 0 end) as pet,
sum(case when fuel_cd='Unleaded Gasoline' then 1 else 0 end) as u_gas from model.final_model_1 group by 1;

create table model.features_30_v2 as 
select cust_group, (case when die = greatest(die,gas,l_gas,pet,u_gas) then 'Diesel'
when gas = greatest(die,gas,l_gas,pet,u_gas) then 'Gasoline'
when l_gas = greatest(die,gas,l_gas,pet,u_gas) then 'Leaded Gasoline'
when pet = greatest(die,gas,l_gas,pet,u_gas) then 'Petrol'
else 'Unleaded Gasoline' end) max_fuel_cd from model.features_29_v2;

create table model.features_31_v2 as 
select a.*, b.max_fuel_cd from model.features_28_v2 a inner join model.features_30_v2 b on a.cust_group = b.cust_group;

--v2 was only cust_group n type
create table model.fb_v3 as 
select distinct cust_group,vin,(case when model_cd ='Sonata Embera' then 'Sedan'
when model_cd ='New Verna' then 'Sedan'
when model_cd ='Venue' then 'SUV'
when model_cd ='Sonata' then 'Sedan'
when model_cd ='Verna' then 'Sedan'
when model_cd ='Accent' then 'Sedan'
when model_cd ='New Santa Fe (DM)' then 'SUV'
when model_cd ='Xcent' then 'Sedan'
when model_cd ='Eon' then 'Hatchback'
when model_cd ='New i20 (IB)' then 'Hatchback'
when model_cd ='EON' then 'Hatchback'
when model_cd ='Neo Elantra' then 'Sedan'
when model_cd ='Terracan' then 'SUV'
when model_cd ='New i20' then 'Hatchback'
when model_cd ='Next Gen Verna' then 'Sedan'
when model_cd ='i10' then 'Hatchback'
when model_cd ='Elantra' then 'Sedan'
when model_cd ='E.F.Sonata' then 'Sedan'
when model_cd ='Grand i10' then 'Hatchback'
when model_cd ='Creta' then 'SUV'
when model_cd ='New Sonata' then 'Sedan'
when model_cd ='i20 Active' then 'Hatchback'
when model_cd ='Getz' then 'Hatchback'
when model_cd ='Santro' then 'Hatchback'
when model_cd ='i20' then 'Hatchback'
when model_cd ='Tucson' then 'SUV'
when model_cd ='Santa Fe CBU' then 'SUV'
when model_cd ='Santa Fe' then 'SUV' end) veh_type from model.final_model_1;


create table model.features_32_v2 as 
select cust_group,  sum(case when veh_type='SUV' then 1 else 0 end) as suv,
sum(case when veh_type='Hatchback' then 1 else 0 end) as hat,
sum(case when veh_type='Sedan' then 1 else 0 end) as sed from model.fb_v3 group by 1;

create table model.features_33_v2 as 
select cust_group, (case when suv = greatest(suv,hat,sed) then 'SUV'
when hat = greatest(suv,hat,sed) then 'Hatchback'
else 'Sedan' end) max_veh_type from model.features_32_v2;

create table model.features_34_v2 as 
select a.*, b.max_veh_type from model.features_31_v2 a inner join model.features_33_v2 b on a.cust_group = b.cust_group;

--3,63,788
select count(*) from model.features_34_v2;

create table model.features_35_v2 as 
select cust_group, count(vin) as dis_vin_ct, sum(case when veh_type='SUV' then 1 else 0 end) as suv_ct,
sum(case when veh_type='Hatchback' then 1 else 0 end) as hat_ct,
sum(case when veh_type='Sedan' then 1 else 0 end) as sed_ct from model.fb_v3 group by 1;

create table model.features_36_v2 as 
select a.*, b.hat_ct,b.sed_ct,b.suv_ct from model.features_34_v2 a inner join model.features_35_v2 b on a.cust_group=b.cust_group;

create table model.features_37_v2 as 
select distinct cust_group,vin, fuel_cd from model.final_model_1;

create table model.features_38_v2 as 
select cust_group, sum(case when fuel_cd='Diesel' then 1 else 0 end) as die,
sum(case when fuel_cd='Gasoline' then 1 else 0 end) as gas,
sum(case when fuel_cd='Leaded Gasoline' then 1 else 0 end) as l_gas,
sum(case when fuel_cd='Petrol' then 1 else 0 end) as pet,
sum(case when fuel_cd='Unleaded Gasoline' then 1 else 0 end) as u_gas from model.features_37_v2 group by 1;

create table model.features_39_v2 as 
select a.*, b.die as die_ct,b.gas as gas_ct,b.l_gas as l_gas_ct,b.pet as pet_ct,b.u_gas as u_gas_ct from model.features_36_v2 a inner join model.features_38_v2 b on a.cust_group=b.cust_group;

create table model.features_40_v2 as 
select distinct cust_group,vin, frequency from model.final_model_1;

create table model.features_41_v2 as 
select cust_group, sum(case when frequency='Annual' then 1 else 0 end) as fre_an_ct,
sum(case when frequency='As required' then 1 else 0 end) as fre_as_ct,
sum(case when frequency='Bi-Annual' then 1 else 0 end) as fre_bi_ct,
sum(case when frequency='One-time' then 1 else 0 end) as fre_on_ct from model.features_40_v2 group by 1;

create table model.features_42_v2 as 
select a.*,b.fre_an_ct,b.fre_as_ct,b.fre_bi_ct,b.fre_on_ct from model.features_39_v2 a inner join model.features_41_v2 b on a.cust_group=b.cust_group;

create table model.features_43_v2 as 
select distinct cust_group,vin,camp_sub_type from model.final_model_1;

create table model.features_44_v2 as 
select cust_group, sum(case when camp_sub_type='Festival' then 1 else 0 end) as type_fes_ct,
sum(case when camp_sub_type='Flagship' then 1 else 0 end) as type_fla_ct,
sum(case when camp_sub_type='Others' then 1 else 0 end) as type_oth_ct,
sum(case when camp_sub_type='Seasonal' then 1 else 0 end) as type_sea_ct,
sum(case when camp_sub_type='Special Day' then 1 else 0 end) as type_spe_ct from model.features_43_v2 group by 1;

create table model.features_45_v2 as 
select a.*,b.type_fes_ct,b.type_fla_ct,b.type_oth_ct,b.type_sea_ct,b.type_spe_ct from model.features_42_v2 a inner join model.features_44_v2 b on a.cust_group=b.cust_group;

create table model.features_46_v2 as 
select a.*,b.labels from model.features_45_v2 a inner join model.final_label b on a.cust_group=b.cust_group;


create table model.features_47_v2 as 
select distinct cust_group,vin from model.final_model_1 a where date(a.prog_end_dt_new) between a.warranty_start_dt and a.warranty_end_dt;

create table model.features_48_v2 as 
select cust_group , sum(case when vin is null then 0 else 1 end) as war_ind from model.features_47_v2 group by 1;

create table model.features_49_v2 as 
select a.*,(case when b.war_ind >0 then 1 else 0 end)as war_ind from model.features_46_v2 a left outer join model.features_48_v2 b on a.cust_group=b.cust_group;

vacuum model.final_model_1;
vacuum analysis.ser_rcrepm_tb_4yr;

--2,95,69,196
create table model.final_model_2
as select distinct a.new_camp_id,a.vin,a.cust_group,a.labels,a.prog_start_dt_new, (date(a.prog_start_dt_new) - interval '90' day) as bef_3,
(date(a.prog_start_dt_new) - interval '180' day) as bef_6, (date(a.prog_start_dt_new) - interval '270' day) as bef_9,
(date(a.prog_start_dt_new) - interval '365' day) as bef_12, b.repm_ro_dtime,b.repm_work_type,b.repm_ro_no,b.repm_dlr_no,(b.repm_bill_total_labr_amt+b.repm_bill_total_othr_amt+b.repm_bill_total_part_amt)tot_ro_amt
from model.final_model_1 a left outer join analysis.ser_rcrepm_tb_4yr b on a.vin=b.repm_vin where b.repm_work_type <> 'AR' ;
--4,04,42,528
select count(*) from model.final_model_2 as fm;
vacuum model.final_model_2;

vacuum model.final_model_1;
vacuum analysis.ser_rcrepm_tb_4yr;
create table model.final_model_2_v2 
as select distinct a.new_camp_id,a.vin,a.cust_group,a.labels,a.prog_start_dt_new, (date(a.prog_start_dt_new) - interval '90' day) as bef_3,
(date(a.prog_start_dt_new) - interval '180' day) as bef_6, (date(a.prog_start_dt_new) - interval '270' day) as bef_9,
(date(a.prog_start_dt_new) - interval '365' day) as bef_12, b.repm_ro_dtime,b.repm_work_type,b.repm_ro_no,b.repm_dlr_no,b.repm_milg,(b.repm_bill_total_labr_amt+b.repm_bill_total_othr_amt+b.repm_bill_total_part_amt)tot_ro_amt
from model.final_model_1 a left outer join analysis.ser_rcrepm_tb_4yr b on a.vin=b.repm_vin where b.repm_work_type <> 'AR' ;


--3,63,788
create table model.final_model_3 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) sum_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) sum_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) sum_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) sum_bef_12 from model.final_model_2 a group by 1;

select count(*) from model.dist_camp as dc;
create table model.dist_camp as
select a.cust_group,count(distinct new_camp_id)d_camp from model.final_model_2 a group by 1;

create table model.final_model_3_v2 as 
select a.cust_group,
round(a.sum_bef_3/b.d_camp)avg_3, round(a.sum_bef_6/b.d_camp)avg_6,
round(a.sum_bef_9/b.d_camp)avg_9,round(a.sum_bef_12/b.d_camp)avg_12 from model.final_model_3 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--3,41,700
create table model.final_model_4 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) fs_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) fs_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) fs_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) fs_bef_12 from model.final_model_2 a where a.repm_work_type='FS' group by 1 ;

create table model.final_model_4_v2 as 
select a.cust_group,
round(a.fs_bef_3/b.d_camp)fs_avg_3, round(a.fs_bef_6/b.d_camp)fs_avg_6,
round(a.fs_bef_9/b.d_camp)fs_avg_9,round(a.fs_bef_12/b.d_camp)fs_avg_12 from model.final_model_4 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,04,924
create table model.final_model_5 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) ps_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) ps_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) ps_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) ps_bef_12 from model.final_model_2 a where a.repm_work_type='PS' group by 1 ;

create table model.final_model_5_v2 as 
select a.cust_group,
round(a.ps_bef_3/b.d_camp)ps_avg_3, round(a.ps_bef_6/b.d_camp)ps_avg_6,
round(a.ps_bef_9/b.d_camp)ps_avg_9,round(a.ps_bef_12/b.d_camp)ps_avg_12 from model.final_model_5 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,55,024
create table model.final_model_6 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) rr_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) rr_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) rr_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) rr_bef_12 from model.final_model_2 a where a.repm_work_type='RR' group by 1 ;

create table model.final_model_6_v2 as 
select a.cust_group,
round(a.rr_bef_3/b.d_camp)rr_avg_3, round(a.rr_bef_6/b.d_camp)rr_avg_6,
round(a.rr_bef_9/b.d_camp)rr_avg_9,round(a.rr_bef_12/b.d_camp)rr_avg_12 from model.final_model_6 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,32,648
create table model.final_model_7 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) ot_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) ot_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) ot_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) ot_bef_12 from model.final_model_2 a where a.repm_work_type not in ('RR', 'PS', 'FS') group by 1 ;

create table model.final_model_7_v2 as 
select a.cust_group,
round(a.ot_bef_3/b.d_camp)ot_avg_3, round(a.ot_bef_6/b.d_camp)ot_avg_6,
round(a.ot_bef_9/b.d_camp)ot_avg_9,round(a.ot_bef_12/b.d_camp)ot_avg_12 from model.final_model_7 a inner join model.dist_camp b on a.cust_group=b.cust_group;

create table model.final_model_8 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_12 from model.final_model_2 a group by 1;

create table model.final_model_8_v2 as 
select a.cust_group,
round(a.sum_ro_bef_3/b.d_camp)ro_avg_3, round(a.sum_ro_bef_6/b.d_camp)ro_avg_6,
round(a.sum_ro_bef_9/b.d_camp)ro_avg_9,round(a.sum_ro_bef_12/b.d_camp)ro_avg_12 from model.final_model_8 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,11,84,644
create table model.final_model_9 as
select b.repm_vin,b.repm_ro_dtime,b.repm_work_type,b.repm_ro_no,b.repm_dlr_no,(b.repm_bill_total_labr_amt+b.repm_bill_total_othr_amt+b.repm_bill_total_part_amt)tot_ro_amt from analysis.ser_rcrepm_tb_4yr b where repm_work_type <> 'AR';

--3,14,700
create table model.final_model_10 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_12 from model.final_model_2 a where a.repm_work_type='FS' group by 1;

create table model.final_model_10_v2 as 
select a.cust_group,
round(a.fs_ro_bef_3/b.d_camp)fs_ro_avg_3, round(a.fs_ro_bef_6/b.d_camp)fs_ro_avg_6,
round(a.fs_ro_bef_9/b.d_camp)fs_ro_avg_9,round(a.fs_ro_bef_12/b.d_camp)fs_ro_avg_12 from model.final_model_10 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,04,924
create table model.final_model_11 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_12 from model.final_model_2 a where a.repm_work_type='PS' group by 1;

create table model.final_model_11_v2 as 
select a.cust_group,
round(a.ps_ro_bef_3/b.d_camp)ps_ro_avg_3, round(a.ps_ro_bef_6/b.d_camp)ps_ro_avg_6,
round(a.ps_ro_bef_9/b.d_camp)ps_ro_avg_9,round(a.ps_ro_bef_12/b.d_camp)ps_ro_avg_12 from model.final_model_11 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,55,024
create table model.final_model_12 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_12 from model.final_model_2 a where a.repm_work_type='RR' group by 1;

create table model.final_model_12_v2 as 
select a.cust_group,
round(a.rr_ro_bef_3/b.d_camp)rr_ro_avg_3, round(a.rr_ro_bef_6/b.d_camp)rr_ro_avg_6,
round(a.rr_ro_bef_9/b.d_camp)rr_ro_avg_9,round(a.rr_ro_bef_12/b.d_camp)rr_ro_avg_12 from model.final_model_12 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--2,32,648
create table model.final_model_13 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_12 from model.final_model_2 a where a.repm_work_type not in ('RR', 'PS', 'FS') group by 1;

create table model.final_model_13_v2 as 
select a.cust_group,
round(a.ot_ro_bef_3/b.d_camp)ot_ro_avg_3, round(a.ot_ro_bef_6/b.d_camp)ot_ro_avg_6,
round(a.ot_ro_bef_9/b.d_camp)ot_ro_avg_9,round(a.ot_ro_bef_12/b.d_camp)ot_ro_avg_12 from model.final_model_13 a inner join model.dist_camp b on a.cust_group=b.cust_group;

select count(*) from model.features_49_v2 as fv;
create table model.features_50_v2 as 
select a.*,b.avg_3,b.avg_6,b.avg_9,b.avg_12,
c.fs_avg_3,c.fs_avg_6,c.fs_avg_9,c.fs_avg_12,
d.ps_avg_3,d.ps_avg_6,d.ps_avg_9,d.ps_avg_12,
e.rr_avg_3,e.rr_avg_6,e.rr_avg_9,e.rr_avg_12,
f.ot_avg_3,f.ot_avg_6,f.ot_avg_9,f.ot_avg_12,
g.ro_avg_3,g.ro_avg_6,g.ro_avg_9,g.ro_avg_12,
h.fs_ro_avg_3,h.fs_ro_avg_6,h.fs_ro_avg_9,h.fs_ro_avg_12,
i.ps_ro_avg_3,i.ps_ro_avg_6,i.ps_ro_avg_9,i.ps_ro_avg_12,
j.rr_ro_avg_3,j.rr_ro_avg_6,j.rr_ro_avg_9,j.rr_ro_avg_12,
k.ot_ro_avg_3,k.ot_ro_avg_6,k.ot_ro_avg_9,k.ot_ro_avg_12 from model.features_49_v2 a 
left outer join model.final_model_3_v2 b on a.cust_group=b.cust_group
left outer join model.final_model_4_v2 c on a.cust_group=c.cust_group
left outer join model.final_model_5_v2 d on a.cust_group=d.cust_group
left outer join model.final_model_6_v2 e on a.cust_group=e.cust_group
left outer join model.final_model_7_v2 f on a.cust_group=f.cust_group
left outer join model.final_model_8_v2 g on a.cust_group=g.cust_group
left outer join model.final_model_10_v2 h on a.cust_group=h.cust_group
left outer join model.final_model_11_v2 i on a.cust_group=i.cust_group
left outer join model.final_model_12_v2 j on a.cust_group=j.cust_group
left outer join model.final_model_13_v2 k on a.cust_group=k.cust_group;

select count(*) from features_50_v2;

create table model.features_51_v2 as 
select cust_group, (case when avg_veh_age<=1 then 1 else 0 end) as age_1,
         (case when avg_veh_age >1 and avg_veh_age<=2 then 1 else 0 end) as age_2, 
      (case when avg_veh_age > 2 and avg_veh_age<=3 then 1 else 0 end) as age_3,
      (case when avg_veh_age > 3 then 1 else 0 end) as age_others from model.features_50_v2;

create table model.features_52_v2 as
select a.*,b.age_1,b.age_2,b.age_3,b.age_others from model.features_50_v2 a inner join model.features_51_v2 b on a.cust_group=b.cust_group;

select con_cd ,count(*) from model.final_model_1 fm where labels is not null group by 1;

--7360801
create table model.features_53_v2 as
select distinct cust_group, contact_id,sex_mf, con_cd from model.final_model_1 where labels is not null; 

create table model.features_54_v2 as
select distinct cust_group, vin, round((date(prog_start_dt_new)-date(registered_dt))/ 365) as Age_of_vehicle,ext_color_cd
from model.final_model_1 where labels is not null;

select sex_mf,count(*) from model.features_53_v2 group by 1;

create table model.features_55_v2 as
select cust_group, 
(case when sex_mf = 'F' or sex_mf = 'W' or sex_mf = 'Female' then 'F'
	  when sex_mf = 'M' or sex_mf = 'Male' then 'M'
	  else 'U' end) sex,
	  (case when con_cd = 'C' or con_cd = 'E' then 'Corporate'
	  when con_cd = 'F' or con_cd = 'G' or con_cd = 'GM' then 'Fleet'
	  when con_cd = 'Individual' or con_cd = 'I' or con_cd = 'S' then 'Individual'
	  else 'Others' end) con_cd from model.features_53_v2;
	 
create table model.features_56_v2 as
select cust_group,
	  (case when Age_of_vehicle<=1 then 1
      when Age_of_vehicle<=2 then 2 
      when Age_of_vehicle<=3 then 3
      else 0 end)age_123,
      (case when Age_of_vehicle <= 3 then 'Gold(0-3Y)'
         when Age_of_vehicle <=5 then 'Platinum(4Y-5Y)' 
      when Age_of_vehicle<=7 then 'Diamond(6Y-7Y)'
      when Age_of_vehicle<=10 then'Sapphire(8Y-10Y)'
      else 'Loyal(GT 10Y)' end)age_slab,
     (case when ext_color_cd='Polar White' then 'Polar White'
	when ext_color_cd='Sleek Silver' then 'Sleek Silver'
	when ext_color_cd='Pure White' then 'Pure White'
	when ext_color_cd='Star Dust' then 'Star Dust'
	when ext_color_cd='Red Passion' then 'Red Passion'
	when ext_color_cd='Wine Red' then 'Wine Red'
	when ext_color_cd='Twilight Blue' then 'Twilight Blue'
	when ext_color_cd='Coral White' then 'Coral White'
	else 'Others' end) color_cd from model.features_54_v2;


create table model.features_57_v2 as 
select cust_group,  sum(case when sex='F' then 1 else 0 end) as sex_f_ct,
sum(case when sex='M' then 1 else 0 end) as sex_m_ct,
sum(case when sex='U' then 1 else 0 end) as sex_u_ct,
sum(case when con_cd='Corporate' then 1 else 0 end) as con_cor_ct,
sum(case when con_cd='Fleet' then 1 else 0 end) as con_fle_ct,
sum(case when con_cd='Individual' then 1 else 0 end) as con_ind_ct,
sum(case when con_cd='Others' then 1 else 0 end) as con_oth_ct from model.features_55_v2 group by 1;

create table model.features_58_v2 as 
select cust_group, (case when sex_m_ct = greatest(sex_m_ct,sex_f_ct,sex_u_ct) then 'M'
when sex_f_ct = greatest(sex_m_ct,sex_f_ct,sex_u_ct) then 'F'
else 'U' end) max_sex,
(case when con_cor_ct = greatest(con_cor_ct,con_fle_ct,con_ind_ct,con_oth_ct) then 'Corporate'
when con_fle_ct = greatest(con_cor_ct,con_fle_ct,con_ind_ct,con_oth_ct) then 'Fleet'
when con_ind_ct = greatest(con_cor_ct,con_fle_ct,con_ind_ct,con_oth_ct) then 'Individual'
else 'Others' end) new_max_con_cd from model.features_57_v2;

create table model.features_59_v2 as 
select cust_group, sum(case when age_123=1 then 1 else 0 end) as age_1_ct,
sum(case when age_123=2 then 1 else 0 end) as age_2_ct,
sum(case when age_123=3 then 1 else 0 end) as age_3_ct,
sum(case when age_123=0 then 1 else 0 end) as age_0_ct,
sum(case when age_slab='Gold(0-3Y)' then 1 else 0 end) as age_g_ct,
sum(case when age_slab='Platinum(4Y-5Y)' then 1 else 0 end) as age_p_ct,
sum(case when age_slab='Diamond(6Y-7Y)' then 1 else 0 end) as age_d_ct,
sum(case when age_slab='Sapphire(8Y-10Y)' then 1 else 0 end) as age_s_ct,
sum(case when age_slab='Loyal(GT 10Y)' then 1 else 0 end) as age_l_ct,
sum(case when color_cd = 'Polar White' then 1 else 0 end) as col_Polar_White,
sum(case when color_cd = 'Sleek Silver' then 1 else 0 end) as col_Sleek_Silver,
sum(case when color_cd = 'Pure White' then 1 else 0 end) as col_Pure_White,
sum(case when color_cd = 'Star Dust' then 1 else 0 end) as col_Star_Dust,
sum(case when color_cd = 'Red Passion' then 1 else 0 end) as col_Red_Passion,
sum(case when color_cd = 'Wine Red' then 1 else 0 end) as col_Wine_Red,
sum(case when color_cd = 'Twilight Blue' then 1 else 0 end) as col_Twilight_Blue,
sum(case when color_cd = 'Coral White' then 1 else 0 end) as col_Coral_White,
sum(case when color_cd = 'Others' then 1 else 0 end) as col_Others from model.features_56_v2 group by 1;

create table model.features_60_v2 as 
select cust_group, (case when age_1_ct = greatest(age_1_ct,age_2_ct,age_2_ct,age_0_ct) then '1'
when age_2_ct = greatest(age_1_ct,age_2_ct,age_2_ct,age_0_ct) then '2'
when age_3_ct = greatest(age_1_ct,age_2_ct,age_2_ct,age_0_ct) then '3'
else '0' end) max_age_123,
(case when age_g_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'G'
when age_p_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'P'
when age_d_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'D'
when age_s_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'S'
else 'L' end) max_age_slab,
(case when col_Polar_White = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Polar White'
when col_Sleek_Silver = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Sleek Silver'
when col_Pure_White = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Pure White'
when col_Star_Dust = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Star Dust'
when col_Red_Passion = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Red Passion'
when col_Wine_Red = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Wine Red'
when col_Twilight_Blue = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Twilight Blue'
when col_Coral_White = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Coral_White'
else 'Others' end) max_color from model.features_59_v2;

create table model.features_61_v2 as 
select a.cust_group,b.sex_f_ct,b.sex_m_ct,b.sex_u_ct,b.con_cor_ct,b.con_fle_ct,b.con_ind_ct,b.con_oth_ct,
c.max_con_cd,c.max_sex,
d.age_0_ct,d.age_1_ct,d.age_2_ct,d.age_3_ct,d.age_d_ct,d.age_g_ct,d.age_l_ct,d.age_p_ct,d.age_s_ct,
d.col_coral_white,d.col_others,d.col_polar_white,d.col_pure_white,d.col_red_passion,d.col_sleek_silver,
d.col_star_dust,d.col_twilight_blue,d.col_wine_red,
e.max_age_123,e.max_age_slab,e.max_color from model.features_52_v2 a inner join model.features_57_v2 b on a.cust_group=b.cust_group
 inner join model.features_58_v2 c on a.cust_group=c.cust_group
 inner join model.features_59_v2 d on a.cust_group=d.cust_group
 inner join model.features_60_v2 e on a.cust_group=e.cust_group;

create table model.features_62_v2 as 
select a.*, b.sex_f_ct,b.sex_m_ct,b.sex_u_ct,b.con_cor_ct,b.con_fle_ct,b.con_ind_ct,b.con_oth_ct,
b.max_con_cd as new_max_con_cd,b.max_sex,
b.age_0_ct,b.age_1_ct,b.age_2_ct,b.age_3_ct,b.age_d_ct,b.age_g_ct,b.age_l_ct,b.age_p_ct,b.age_s_ct,
b.col_coral_white,b.col_others,b.col_polar_white,b.col_pure_white,b.col_red_passion,b.col_sleek_silver,
b.col_star_dust,b.col_twilight_blue,b.col_wine_red,
b.max_age_123,b.max_age_slab,b.max_color from model.features_52_v2 a inner join model.features_61_v2 b on a.cust_group=b.cust_group;

select max_sex,count(*) from model.features_62_v2 group by 1;

SELECT COUNT(*) AS NUMBEROFCOLUMNS FROM INFORMATION_SCHEMA.columns WHERE table_schema = 'model' AND table_name = 'features_62_v2';

create table model.features_63_v2 as 
select distinct cust_group,new_camp_id,frequency from model.final_model_1;

create table model.features_64_v2 as 
select distinct cust_group, new_camp_id, camp_sub_type from model.final_model_1;

create table model.features_65_v2 as 
select cust_group, sum(case when frequency='Annual' then 1 else 0 end) as new_fre_an_ct,
sum(case when frequency='As required' then 1 else 0 end) as new_fre_as_ct,
sum(case when frequency='Bi-Annual' then 1 else 0 end) as new_fre_bi_ct,
sum(case when frequency='One-time' then 1 else 0 end) as new_fre_on_ct from model.features_63_v2 group by 1;

create table model.features_69_v2 as 
select cust_group, (case when new_fre_an_ct = greatest(new_fre_an_ct,new_fre_as_ct,new_fre_bi_ct,new_fre_on_ct) then 'Annual'
when new_fre_as_ct = greatest(new_fre_an_ct,new_fre_as_ct,new_fre_bi_ct,new_fre_on_ct) then 'As required'
when new_fre_bi_ct = greatest(new_fre_an_ct,new_fre_as_ct,new_fre_bi_ct,new_fre_on_ct) then 'Bi-Annual'
else 'One-time' end) new_max_frequency from model.features_65_v2;

create table model.features_66_v2 as 
select a.*,b.new_fre_an_ct,b.new_fre_as_ct,b.new_fre_bi_ct,b.new_fre_on_ct from model.features_62_v2 a inner join model.features_65_v2 b on a.cust_group=b.cust_group;

create table model.features_66_v3 as 
select a.*,b.new_fre_an_ct,b.new_fre_as_ct,b.new_fre_bi_ct,b.new_fre_on_ct,c.new_max_frequency from model.features_62_v2 a inner join model.features_65_v2 b on a.cust_group=b.cust_group
inner join model.features_69_v2 c on a.cust_group=c.cust_group;

create table model.features_67_v2 as 
select cust_group, sum(case when camp_sub_type='Festival' then 1 else 0 end) as new_type_fes_ct,
sum(case when camp_sub_type='Flagship' then 1 else 0 end) as new_type_fla_ct,
sum(case when camp_sub_type='Others' then 1 else 0 end) as new_type_oth_ct,
sum(case when camp_sub_type='Seasonal' then 1 else 0 end) as new_type_sea_ct,
sum(case when camp_sub_type='Special Day' then 1 else 0 end) as new_type_spe_ct from model.features_64_v2 group by 1;

create table model.features_70_v2 as 
select cust_group, (case when new_type_fes_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Festival'
when new_type_fla_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Flagship'
when new_type_oth_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Others'
when new_type_sea_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Seasonal'
else 'Special Day' end) new_max_sub_type from model.features_67_v2;

create table model.features_68_v2 as 
select a.*,b.new_type_fes_ct,b.new_type_fla_ct,b.new_type_oth_ct,b.new_type_sea_ct,b.new_type_spe_ct from model.features_66_v2 a inner join model.features_67_v2 b on a.cust_group=b.cust_group;

create table model.features_68_v3 as 
select a.*,b.new_type_fes_ct,b.new_type_fla_ct,b.new_type_oth_ct,b.new_type_sea_ct,b.new_type_spe_ct,c.new_max_sub_type from model.features_66_v2 a inner join model.features_67_v2 b on a.cust_group=b.cust_group
inner join model.features_70_v2 c on a.cust_group=c.cust_group;

select cust_group,new_max_frequency,new_max_sub_type from model.features_68_v3;

create table model.final_model_14 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_12 from model.final_model_2_v2 a group by 1;

create table model.final_model_14_v2 as 
select a.cust_group,
round(a.mlg_sum_3/b.d_camp)mlg_avg_3, round(a.mlg_sum_6/b.d_camp)mlg_avg_6,
round(a.mlg_sum_9/b.d_camp)mlg_avg_9,round(a.mlg_sum_12/b.d_camp)mlg_avg_12 from model.final_model_14 a inner join model.dist_camp b on a.cust_group=b.cust_group;

create table model.cust_group as
select distinct cust_group from model.features_50_v2 as fv;

create table model.features_v3 as 
select a.cust_group,b.mlg_avg_3,b.mlg_avg_6,b.mlg_avg_9,b.mlg_avg_12 from model.cust_group a left outer join model.final_model_14_v2 b on a.cust_group=b.cust_group;

CREATE TABLE model.features_v3 (
	cust_group varchar(15) NULL,
	mlg_avg_3 numeric NULL,
	mlg_avg_6 numeric NULL,
	mlg_avg_9 numeric NULL,
	mlg_avg_12 numeric null);
	
create table model.features_71_v2 as 
select cust_group, (case when car_own_ty='Single' and avg_3 > 0 then 1 else 0 end)single_3_ind,
(case when car_own_ty='Single' and avg_6 > 0 then 1 else 0 end)single_6_ind from model.features_68_v2;

create table model.features_72_v2 as 
select a.*,b.mlg_avg_3,b.mlg_avg_6,b.mlg_avg_9,b.mlg_avg_12,c.single_3_ind, c.single_6_ind from model.features_68_v3 a inner join model.features_v3 b on a.cust_group=b.cust_group
inner join model.features_71_v2 c on a.cust_group=c.cust_group;

--124
SELECT column_name FROM INFORMATION_SCHEMA.columns WHERE table_schema = 'model' AND table_name = 'features_72_v2';

create table model.features_73_v2 as select * from model.features_72_v2 a;

vacuum model.features_73_v2;
update model.features_73_v2 set con_oth_ct = (con_fle_ct+con_oth_ct);
vacuum model.features_72_v2;
vacuum model.features_73_v2;
--0
select count(*) from (select a.con_oth_ct,b.sum from (select cust_group,con_oth_ct from model.features_73_v2) as a inner join (select cust_group,sum(con_oth_ct+con_fle_ct) from model.features_72_v2 group by 1)as b on a.cust_group=b.cust_group) as c where c.con_oth_ct = c.sum ;

vacuum model.final_model_1;
create table model.features_74_v2 as 
select distinct a.cust_group,a.ro_dealer from model.final_model_1 a;

create table model.features_75_v2 as 
select distinct a.cust_group,a.city_code from model.final_model_1 a;

CREATE TABLE model.new_hra_city (
	City_code varchar(20) NULL,
	city varchar(20) NULL,
	state_short varchar(20) NULL,
	state varchar(20) NULL,
	region varchar(20) NULL,
	"zone" varchar(20) null,
	HRA_Class varchar(20) null,
	State_Literacy varchar(20) null,
	State_Urbanisation varchar(20) null
);
	
CREATE TABLE model.new_hra_dealer (
	dealer_code varchar(20) NULL,
	ws_type varchar(20) NULL,
	city varchar(200) NULL,
	state varchar(200) NULL,
	region varchar(20) NULL,
	"zone" varchar(20) null,
	HRA_Class varchar(20) null,
	State_Literacy varchar(20) null,
	State_Urbanisation varchar(20) null
);

create table model.features_76_v2 as 
select a.*, b.hra_class,b.state_literacy,b.state_urbanisation from model.features_74_v2 a left outer join model.new_hra_dealer b on a.ro_dealer=b.dealer_code;

create table model.features_77_v2 as 
select a.*, b.hra_class,b.state_literacy,b.state_urbanisation from model.features_75_v2 a left outer join model.new_hra_city b on a.city_code=b.city_code;

create table model.features_78_v2 as 
select a.cust_group, max(a.hra_class) max_dlr_hra, max(a.state_literacy) max_dlr_lit, avg(cast(a.state_literacy as float8)) avg_dlr_lit,
max(a.state_urbanisation) max_dlr_urb, avg(cast(a.state_urbanisation as float8)) avg_dlr_urb,
sum(case when a.hra_class='X' then 1 else 0 end) as X_dlr_hra,
sum(case when a.hra_class='Y' then 1 else 0 end) as Y_dlr_hra,
sum(case when a.hra_class='Z' then 1 else 0 end) as Z_dlr_hra from model.features_76_v2 a group by 1;

create table model.features_79_v2 as 
select a.cust_group, max(a.hra_class) max_city_hra, max(a.state_literacy) max_city_lit, avg(cast(a.state_literacy as float8)) avg_city_lit,
max(a.state_urbanisation) max_city_urb, avg(cast(a.state_urbanisation as float8)) avg_city_urb, 
sum(case when a.hra_class='X' then 1 else 0 end) as X_city_hra,
sum(case when a.hra_class='Y' then 1 else 0 end) as Y_city_hra,
sum(case when a.hra_class='Z' then 1 else 0 end) as Z_city_hra from model.features_77_v2 a group by 1;

vacuum model.features_73_v2;
vacuum model.features_78_v2;
vacuum model.features_79_v2;
create table model.features_80_v2 as 
select a.*, b.max_dlr_hra,b.max_dlr_lit,b.avg_dlr_lit,b.max_dlr_urb,b.avg_dlr_urb,b.x_dlr_hra,b.y_dlr_hra,b.z_dlr_hra,
c.max_city_hra,c.max_city_lit,c.avg_city_lit,c.max_city_urb,c.avg_city_urb,c.x_city_hra,c.y_city_hra,c.z_city_hra 
from model.features_73_v2 a 
inner join model.features_78_v2 b on a.cust_group=b.cust_group
inner join model.features_79_v2 c on a.cust_group=c.cust_group;

--140
SELECT COUNT(*) AS NUMBEROFCOLUMNS FROM INFORMATION_SCHEMA.columns WHERE table_schema = 'model' AND table_name = 'features_80_v2';
alter table model.features_80_v2 drop column con_fle_ct;

-------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
----------------------------------------Step by step creation of variables for modelling--------------------------------
------------------------------------------------------------------------------------------------------------------------

-- creation of Fact all table for all 20 camps and events 
create table public.fact_all as
select fact.*,
ro.ro_dealer,
ro.repm_ro_no,
   ro.repm_milg,
    ro.max_ro_dtime,
    ro.ro_state,
    ro.ro_region,
    ro.ro_zone,
    ro.active_from,
    ro.alias_name,
    asset.model_yr,
    asset.fuel_cd,
    asset.ext_color_cd,
    asset.warranty_start_dt,
    asset.warranty_end_dt,
    asset.dlr_id,
    asset.registered_dt,
    camp.ageofvehicle_targeted,
    camp.models_targeted ,
       camp.camp_sub_type,
       camp.frequency,
       camp.region,
       camp.SMS_sent,
       camp.Budget,
      city.city,
      city.statecode,
      city.state,
      city.region_new,
      city.zone
    from test.fact fact left join test.ro_dimension ro
    on fact.new_camp_id=ro.new_camp_id
    and fact.contact_id=ro.contact_id
    and fact.vin=ro.vin
    left join gcrm.s_asset asset
    on fact.asset_id=asset.row_id
    left join test.camp_master1 camp
    on fact.new_camp_id=camp.new_camp_id
    left join test.city_master city
    on fact.city_code=city.city_code;
    
--importing file which was generated after grouping customers
CREATE TABLE public.final_groups (
	vin varchar(100) NULL,
	phone varchar(100) NULL,
	email varchar(100) NULL,
	cust_group varchar(15) NULL,
	contact_id varchar(20) NULL
);

select count(distinct cust_group) from public.final_groups;

--removing redundent vin and contact inside a customer group
create table public.final_groups_2 as 
select distinct vin,contact_id,cust_group from public.final_groups;

--bringing in customer group ID column into the fact all table
vacuum public.fact_all;
vacuum public.final_groups_2;
--32,568,926
create table model.final_model as
select a.*,b.cust_group from public.fact_all a left outer join public.final_groups_2 b on a.vin=b.vin and a.contact_id=b.contact_id;

--importing file which was generating after labeling channel for the customer groups
CREATE TABLE model.final_label (
	cust_group varchar(15) NULL,
	labels varchar(15) NULL
);
select count(distinct cust_group) from public.final_groups;
select count(*) from model.final_label;

--adding labels into the final model table
vacuum model.final_model;
vacuum model.final_label;
--3,25,68,926
create table model.final_model_1 as 
select a.*, b.labels from model.final_model a left outer join model.final_label b on a.cust_group=b.cust_group;
delete from model.final_model_1 where labels is null;
vacuum model.final_model_1;
select count(*) from model.final_model_1 fm where labels is null;

------------------------------------------------------------------------------------------------------------------
-------------------------------------------CREATING FEATURES FOR MODEL--------------------------------------------
------------------------------------------------------------------------------------------------------------------

--creating max_con_cd variable for each customer
create table model.features_6_v2 as 
select cust_group, sum(case when con_cd='B' then 1 else 0 end) as con_B,
sum(case when con_cd='C' then 1 else 0 end) as con_C,
sum(case when con_cd='E' then 1 else 0 end) as con_E,
sum(case when con_cd='F' then 1 else 0 end) as con_F,
sum(case when con_cd='G' then 1 else 0 end) as con_G,
sum(case when con_cd='I' or con_cd='Individual' then 1 else 0 end) as con_I,
sum(case when con_cd=null then 1 else 0 end) as con_null
from model.final_model_1 group by 1;


create table model.features_7_v2 as 
select cust_group, (case when con_b = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'B'
when con_c = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'C'
when con_e = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'E'
when con_f = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'F'
when con_g = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'G'
when con_i = greatest(con_b,con_c,con_e,con_f,con_g,con_i,con_null) then 'I'
else 'NULL' end) max_con_cd from model.features_6_v2;

----creating max_city_cd variable and subsequently bringing city name, state, region, zone from city mapping file from anurag for each customer
create table model.features_9_v2 as 
select cust_group,city_code, count(city_code) from model.final_model_1 group by 1,2;

create table model.features_10_v2 as 
select cust_group,max(count) from model.features_9_v2 group by 1;

--select count(*) from public.features_10;
--27,442
create table model.features_11_v2 as 
select distinct b.cust_group, a.city_code as max_city_cd from model.features_9_v2 a inner join model.features_10_v2 b on a.cust_group=b.cust_group and a.count=b.max;
--select count(*) from public.features_11;--27,442

create table model.features_12_v2 as
select a.cust_group,max(max_city_cd) from model.features_11_v2 a group by 1;

create table model.features_13_v2 as
select a.*, b.max as max_city_cd from model.features_7_v2 a inner join model.features_12_v2 b on a.cust_group =b.cust_group;

UPDATE model.features_13_v2 SET max_city_cd=trim(leading '0' FROM max_city_cd::text);


create table model.features_14_v2 as 
select a.*,b.city,b.region,b.state,b."zone" from model.features_13_v2 a left outer join public.city_mapping_final b on cast(a.max_city_cd as varchar)=b.city_code;
--select max_city_cd,count(*) from public.features_14 group by 1 order by 2 asc;

----creating max_sub_type variable for each customer
create table model.features_15_v2 as 
select cust_group, sum(case when camp_sub_type='Festival' then 1 else 0 end) as type_fes,
sum(case when camp_sub_type='Flagship' then 1 else 0 end) as type_fla,
sum(case when camp_sub_type='Others' then 1 else 0 end) as type_oth,
sum(case when camp_sub_type='Seasonal' then 1 else 0 end) as type_sea,
sum(case when camp_sub_type='Special Day' then 1 else 0 end) as type_spe from model.final_model_1 group by 1;

create table model.features_16_v2 as 
select cust_group, (case when type_fes = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Festival'
when type_fla = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Flagship'
when type_oth = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Others'
when type_sea = greatest(type_fes,type_fla,type_oth,type_sea,type_spe) then 'Seasonal'
else 'Special Day' end) max_sub_type from model.features_15_v2;

create table model.features_17_v2 as 
select a.*, b.max_sub_type from model.features_14_v2 a inner join model.features_16_v2 b on a.cust_group = b.cust_group;

----creating max_frequency variable for each customer
create table model.features_18_v2 as 
select cust_group, sum(case when frequency='Annual' then 1 else 0 end) as fre_an,
sum(case when frequency='As required' then 1 else 0 end) as fre_as,
sum(case when frequency='Bi-Annual' then 1 else 0 end) as fre_bi,
sum(case when frequency='One-time' then 1 else 0 end) as fre_on from model.final_model_1 group by 1;

create table model.features_19_v2 as 
select cust_group, (case when fre_an = greatest(fre_an,fre_as,fre_bi,fre_on) then 'Annual'
when fre_as = greatest(fre_an,fre_as,fre_bi,fre_on) then 'As required'
when fre_bi = greatest(fre_an,fre_as,fre_bi,fre_on) then 'Bi-Annual'
else 'One-time' end) max_frequency from model.features_18_v2;

create table model.features_20_v2 as 
select a.*, b.max_frequency from model.features_17_v2 a inner join model.features_19_v2 b on a.cust_group = b.cust_group;

 ----creating avg_odo_rd variable for each customer
create table model.features_21_v2 as 
select cust_group, avg(repm_milg) avg_odo_rd from model.final_model_1 group by 1;

create table model.features_22_v2 as 
select a.*, b.avg_odo_rd from model.features_20_v2 a inner join model.features_21_v2 b on a.cust_group=b.cust_group;

------creating #VIN and #distinct VIN variable for each customer
create table model.features_2_v2 as
select cust_group,count(vin) as vin_ct, count(distinct vin) from model.final_model_1 group by 1;

create table model.features_3_v2 as
select a.*, b.vin_ct,b.count as dis_vin_ct from model.features_22_v2 a inner join model.features_2_v2 b on a.cust_group = b.cust_group;

----creating car_own_ty variable for each customer
create table model.features_23_v2 as
select cust_group, (case when dis_vin_ct = 1 then 'Single'
else 'Multi' end) car_ct from model.features_3_v2;

create table model.features_24_v2 as 
select a.*, b.car_ct as car_own_ty from model.features_3_v2 a inner join model.features_23_v2 b on a.cust_group=b.cust_group;

----creating avg_veh_age variable for each customer
create table model.temp_model as 
select cust_group, round((date(prog_start_dt_new)-date(registered_dt))/ 365) as Age_of_vehicle from model.final_model_1;

create table model.features_25_v2 as 
select cust_group, avg(Age_of_vehicle) as avg_veh_age from model.temp_model group by 1;

create table model.features_26_v2 as 
select a.*, b.avg_veh_age from model.features_24_v2 a inner join model.features_25_v2 b on a.cust_group=b.cust_group;

----binning vehicle age into 5 categories
create table model.features_27_v2 as 
select cust_group, (case when avg_veh_age <= 3 then 'Gold(0-3Y)'
         when avg_veh_age <=5 then 'Platinum(4Y-5Y)' 
      when avg_veh_age<=7 then 'Diamond(6Y-7Y)'
      when avg_veh_age<=10 then'Sapphire(8Y-10Y)'
      else 'Loyal(GT 10Y)' end) Vehicle_Age_bin from model.features_26_v2;
      
create table model.features_28_v2 as 
select a.*, b.vehicle_age_bin from model.features_26_v2 a inner join model.features_27_v2 b on a.cust_group=b.cust_group;    

-------creating max_fuel_cd variable for each customer
create table model.features_29_v2 as 
select cust_group,  sum(case when fuel_cd='Diesel' then 1 else 0 end) as die,
sum(case when fuel_cd='Gasoline' then 1 else 0 end) as gas,
sum(case when fuel_cd='Leaded Gasoline' then 1 else 0 end) as l_gas,
sum(case when fuel_cd='Petrol' then 1 else 0 end) as pet,
sum(case when fuel_cd='Unleaded Gasoline' then 1 else 0 end) as u_gas from model.final_model_1 group by 1;

create table model.features_30_v2 as 
select cust_group, (case when die = greatest(die,gas,l_gas,pet,u_gas) then 'Diesel'
when gas = greatest(die,gas,l_gas,pet,u_gas) then 'Gasoline'
when l_gas = greatest(die,gas,l_gas,pet,u_gas) then 'Leaded Gasoline'
when pet = greatest(die,gas,l_gas,pet,u_gas) then 'Petrol'
else 'Unleaded Gasoline' end) max_fuel_cd from model.features_29_v2;

create table model.features_31_v2 as 
select a.*, b.max_fuel_cd from model.features_28_v2 a inner join model.features_30_v2 b on a.cust_group = b.cust_group;

------creating vehicle type variable by classifying car model into sedan/SUV/hatchback for each customer
create table model.fb_v3 as 
select distinct cust_group,vin,(case when model_cd ='Sonata Embera' then 'Sedan'
when model_cd ='New Verna' then 'Sedan'
when model_cd ='Venue' then 'SUV'
when model_cd ='Sonata' then 'Sedan'
when model_cd ='Verna' then 'Sedan'
when model_cd ='Accent' then 'Sedan'
when model_cd ='New Santa Fe (DM)' then 'SUV'
when model_cd ='Xcent' then 'Sedan'
when model_cd ='Eon' then 'Hatchback'
when model_cd ='New i20 (IB)' then 'Hatchback'
when model_cd ='EON' then 'Hatchback'
when model_cd ='Neo Elantra' then 'Sedan'
when model_cd ='Terracan' then 'SUV'
when model_cd ='New i20' then 'Hatchback'
when model_cd ='Next Gen Verna' then 'Sedan'
when model_cd ='i10' then 'Hatchback'
when model_cd ='Elantra' then 'Sedan'
when model_cd ='E.F.Sonata' then 'Sedan'
when model_cd ='Grand i10' then 'Hatchback'
when model_cd ='Creta' then 'SUV'
when model_cd ='New Sonata' then 'Sedan'
when model_cd ='i20 Active' then 'Hatchback'
when model_cd ='Getz' then 'Hatchback'
when model_cd ='Santro' then 'Hatchback'
when model_cd ='i20' then 'Hatchback'
when model_cd ='Tucson' then 'SUV'
when model_cd ='Santa Fe CBU' then 'SUV'
when model_cd ='Santa Fe' then 'SUV' end) veh_type from model.final_model_1;

create table model.features_32_v2 as 
select cust_group,  sum(case when veh_type='SUV' then 1 else 0 end) as suv,
sum(case when veh_type='Hatchback' then 1 else 0 end) as hat,
sum(case when veh_type='Sedan' then 1 else 0 end) as sed from model.fb_v3 group by 1;

create table model.features_33_v2 as 
select cust_group, (case when suv = greatest(suv,hat,sed) then 'SUV'
when hat = greatest(suv,hat,sed) then 'Hatchback'
else 'Sedan' end) max_veh_type from model.features_32_v2;

create table model.features_34_v2 as 
select a.*, b.max_veh_type from model.features_31_v2 a inner join model.features_33_v2 b on a.cust_group = b.cust_group;

--finding out count of suv, sedan and hatchback in each customer group
create table model.features_35_v2 as 
select cust_group, count(vin) as dis_vin_ct, sum(case when veh_type='SUV' then 1 else 0 end) as suv_ct,
sum(case when veh_type='Hatchback' then 1 else 0 end) as hat_ct,
sum(case when veh_type='Sedan' then 1 else 0 end) as sed_ct from model.fb_v3 group by 1;

create table model.features_36_v2 as 
select a.*, b.hat_ct,b.sed_ct,b.suv_ct from model.features_34_v2 a inner join model.features_35_v2 b on a.cust_group=b.cust_group;

------creating fuel type variable and each fuel category type for each customer
create table model.features_37_v2 as 
select distinct cust_group,vin, fuel_cd from model.final_model_1;

create table model.features_38_v2 as 
select cust_group, sum(case when fuel_cd='Diesel' then 1 else 0 end) as die,
sum(case when fuel_cd='Gasoline' then 1 else 0 end) as gas,
sum(case when fuel_cd='Leaded Gasoline' then 1 else 0 end) as l_gas,
sum(case when fuel_cd='Petrol' then 1 else 0 end) as pet,
sum(case when fuel_cd='Unleaded Gasoline' then 1 else 0 end) as u_gas from model.features_37_v2 group by 1;

create table model.features_39_v2 as 
select a.*, b.die as die_ct,b.gas as gas_ct,b.l_gas as l_gas_ct,b.pet as pet_ct,b.u_gas as u_gas_ct from model.features_36_v2 a inner join model.features_38_v2 b on a.cust_group=b.cust_group;

------creating count of each of the frequency variable for each customer
create table model.features_40_v2 as 
select distinct cust_group,vin, frequency from model.final_model_1;

create table model.features_41_v2 as 
select cust_group, sum(case when frequency='Annual' then 1 else 0 end) as fre_an_ct,
sum(case when frequency='As required' then 1 else 0 end) as fre_as_ct,
sum(case when frequency='Bi-Annual' then 1 else 0 end) as fre_bi_ct,
sum(case when frequency='One-time' then 1 else 0 end) as fre_on_ct from model.features_40_v2 group by 1;

create table model.features_42_v2 as 
select a.*,b.fre_an_ct,b.fre_as_ct,b.fre_bi_ct,b.fre_on_ct from model.features_39_v2 a inner join model.features_41_v2 b on a.cust_group=b.cust_group;

------creating count of each of the camp sub type variable for each customer
create table model.features_43_v2 as 
select distinct cust_group,vin,camp_sub_type from model.final_model_1;

create table model.features_44_v2 as 
select cust_group, sum(case when camp_sub_type='Festival' then 1 else 0 end) as type_fes_ct,
sum(case when camp_sub_type='Flagship' then 1 else 0 end) as type_fla_ct,
sum(case when camp_sub_type='Others' then 1 else 0 end) as type_oth_ct,
sum(case when camp_sub_type='Seasonal' then 1 else 0 end) as type_sea_ct,
sum(case when camp_sub_type='Special Day' then 1 else 0 end) as type_spe_ct from model.features_43_v2 group by 1;

create table model.features_45_v2 as 
select a.*,b.type_fes_ct,b.type_fla_ct,b.type_oth_ct,b.type_sea_ct,b.type_spe_ct from model.features_42_v2 a inner join model.features_44_v2 b on a.cust_group=b.cust_group;

--adding the dependent variable into the features table
create table model.features_46_v2 as 
select a.*,b.labels from model.features_45_v2 a inner join model.final_label b on a.cust_group=b.cust_group;

------creating warrenty indicator variable for each customer
create table model.features_47_v2 as 
select distinct cust_group,vin from model.final_model_1 a where date(a.prog_end_dt_new) between a.warranty_start_dt and a.warranty_end_dt;

create table model.features_48_v2 as 
select cust_group , sum(case when vin is null then 0 else 1 end) as war_ind from model.features_47_v2 group by 1;

create table model.features_49_v2 as 
select a.*,(case when b.war_ind >0 then 1 else 0 end)as war_ind from model.features_46_v2 a left outer join model.features_48_v2 b on a.cust_group=b.cust_group;

-------------------------------------------------------------------------------------------------------------
-----------------------------------------CREATING RO VARIABLES-----------------------------------------------
-------------------------------------------------------------------------------------------------------------

--Taking into account only Mechanical Repairs for analysis
vacuum model.final_model_1;
vacuum analysis.ser_rcrepm_tb_4yr;
create table model.final_model_2
as select distinct a.new_camp_id,a.vin,a.cust_group,a.labels,a.prog_start_dt_new, (date(a.prog_start_dt_new) - interval '90' day) as bef_3,
(date(a.prog_start_dt_new) - interval '180' day) as bef_6, (date(a.prog_start_dt_new) - interval '270' day) as bef_9,
(date(a.prog_start_dt_new) - interval '365' day) as bef_12, b.repm_ro_dtime,b.repm_work_type,b.repm_ro_no,b.repm_dlr_no,(b.repm_bill_total_labr_amt+b.repm_bill_total_othr_amt+b.repm_bill_total_part_amt)tot_ro_amt
from model.final_model_1 a left outer join analysis.ser_rcrepm_tb_4yr b on a.vin=b.repm_vin where b.repm_work_type <> 'AR' ;
--4,04,42,528
select count(*) from model.final_model_2 as fm;
vacuum model.final_model_2;

vacuum model.final_model_1;
vacuum analysis.ser_rcrepm_tb_4yr;
create table model.final_model_2_v2 
as select distinct a.new_camp_id,a.vin,a.cust_group,a.labels,a.prog_start_dt_new, (date(a.prog_start_dt_new) - interval '90' day) as bef_3,
(date(a.prog_start_dt_new) - interval '180' day) as bef_6, (date(a.prog_start_dt_new) - interval '270' day) as bef_9,
(date(a.prog_start_dt_new) - interval '365' day) as bef_12, b.repm_ro_dtime,b.repm_work_type,b.repm_ro_no,b.repm_dlr_no,b.repm_milg,(b.repm_bill_total_labr_amt+b.repm_bill_total_othr_amt+b.repm_bill_total_part_amt)tot_ro_amt
from model.final_model_1 a left outer join analysis.ser_rcrepm_tb_4yr b on a.vin=b.repm_vin where b.repm_work_type <> 'AR' ;


--Average # RO before 3,6,9 and 12 months of campaign
create table model.final_model_3 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) sum_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) sum_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) sum_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) sum_bef_12 from model.final_model_2 a group by 1;

select count(*) from model.dist_camp as dc;
create table model.dist_camp as
select a.cust_group,count(distinct new_camp_id)d_camp from model.final_model_2 a group by 1;

create table model.final_model_3_v2 as 
select a.cust_group,
round(a.sum_bef_3/b.d_camp)avg_3, round(a.sum_bef_6/b.d_camp)avg_6,
round(a.sum_bef_9/b.d_camp)avg_9,round(a.sum_bef_12/b.d_camp)avg_12 from model.final_model_3 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average # FREE SERVICE RO before 3,6,9 and 12 months of campaign
create table model.final_model_4 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) fs_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) fs_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) fs_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) fs_bef_12 from model.final_model_2 a where a.repm_work_type='FS' group by 1 ;

create table model.final_model_4_v2 as 
select a.cust_group,
round(a.fs_bef_3/b.d_camp)fs_avg_3, round(a.fs_bef_6/b.d_camp)fs_avg_6,
round(a.fs_bef_9/b.d_camp)fs_avg_9,round(a.fs_bef_12/b.d_camp)fs_avg_12 from model.final_model_4 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average # PAID SERVICE RO before 3,6,9 and 12 months of campaign
create table model.final_model_5 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) ps_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) ps_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) ps_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) ps_bef_12 from model.final_model_2 a where a.repm_work_type='PS' group by 1 ;

create table model.final_model_5_v2 as 
select a.cust_group,
round(a.ps_bef_3/b.d_camp)ps_avg_3, round(a.ps_bef_6/b.d_camp)ps_avg_6,
round(a.ps_bef_9/b.d_camp)ps_avg_9,round(a.ps_bef_12/b.d_camp)ps_avg_12 from model.final_model_5 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average # RUNNING REPAIR RO before 3,6,9 and 12 months of campaign
create table model.final_model_6 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) rr_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) rr_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) rr_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) rr_bef_12 from model.final_model_2 a where a.repm_work_type='RR' group by 1 ;

create table model.final_model_6_v2 as 
select a.cust_group,
round(a.rr_bef_3/b.d_camp)rr_avg_3, round(a.rr_bef_6/b.d_camp)rr_avg_6,
round(a.rr_bef_9/b.d_camp)rr_avg_9,round(a.rr_bef_12/b.d_camp)rr_avg_12 from model.final_model_6 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average # OTHER MECHANICAL RO before 3,6,9 and 12 months of campaign
create table model.final_model_7 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then 1 else 0 end) ot_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then 1 else 0 end) ot_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then 1 else 0 end) ot_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then 1 else 0 end) ot_bef_12 from model.final_model_2 a where a.repm_work_type not in ('RR', 'PS', 'FS') group by 1 ;

create table model.final_model_7_v2 as 
select a.cust_group,
round(a.ot_bef_3/b.d_camp)ot_avg_3, round(a.ot_bef_6/b.d_camp)ot_avg_6,
round(a.ot_bef_9/b.d_camp)ot_avg_9,round(a.ot_bef_12/b.d_camp)ot_avg_12 from model.final_model_7 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average RO value before 3,6,9 and 12 months of campaign
create table model.final_model_8 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) sum_ro_bef_12 from model.final_model_2 a group by 1;

create table model.final_model_8_v2 as 
select a.cust_group,
round(a.sum_ro_bef_3/b.d_camp)ro_avg_3, round(a.sum_ro_bef_6/b.d_camp)ro_avg_6,
round(a.sum_ro_bef_9/b.d_camp)ro_avg_9,round(a.sum_ro_bef_12/b.d_camp)ro_avg_12 from model.final_model_8 a inner join model.dist_camp b on a.cust_group=b.cust_group;

create table model.final_model_9 as
select b.repm_vin,b.repm_ro_dtime,b.repm_work_type,b.repm_ro_no,b.repm_dlr_no,(b.repm_bill_total_labr_amt+b.repm_bill_total_othr_amt+b.repm_bill_total_part_amt)tot_ro_amt from analysis.ser_rcrepm_tb_4yr b where repm_work_type <> 'AR';

--Average FREE SERVICE RO value before 3,6,9 and 12 months of campaign
create table model.final_model_10 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) fs_ro_bef_12 from model.final_model_2 a where a.repm_work_type='FS' group by 1;

create table model.final_model_10_v2 as 
select a.cust_group,
round(a.fs_ro_bef_3/b.d_camp)fs_ro_avg_3, round(a.fs_ro_bef_6/b.d_camp)fs_ro_avg_6,
round(a.fs_ro_bef_9/b.d_camp)fs_ro_avg_9,round(a.fs_ro_bef_12/b.d_camp)fs_ro_avg_12 from model.final_model_10 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average PAID SERVICE RO value before 3,6,9 and 12 months of campaign
create table model.final_model_11 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) ps_ro_bef_12 from model.final_model_2 a where a.repm_work_type='PS' group by 1;

create table model.final_model_11_v2 as 
select a.cust_group,
round(a.ps_ro_bef_3/b.d_camp)ps_ro_avg_3, round(a.ps_ro_bef_6/b.d_camp)ps_ro_avg_6,
round(a.ps_ro_bef_9/b.d_camp)ps_ro_avg_9,round(a.ps_ro_bef_12/b.d_camp)ps_ro_avg_12 from model.final_model_11 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average RUNNING REPAIR RO value before 3,6,9 and 12 months of campaign
create table model.final_model_12 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) rr_ro_bef_12 from model.final_model_2 a where a.repm_work_type='RR' group by 1;

create table model.final_model_12_v2 as 
select a.cust_group,
round(a.rr_ro_bef_3/b.d_camp)rr_ro_avg_3, round(a.rr_ro_bef_6/b.d_camp)rr_ro_avg_6,
round(a.rr_ro_bef_9/b.d_camp)rr_ro_avg_9,round(a.rr_ro_bef_12/b.d_camp)rr_ro_avg_12 from model.final_model_12 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Average OTHER MECHANICAL RO value before 3,6,9 and 12 months of campaign
create table model.final_model_13 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then tot_ro_amt else 0 end) ot_ro_bef_12 from model.final_model_2 a where a.repm_work_type not in ('RR', 'PS', 'FS') group by 1;

create table model.final_model_13_v2 as 
select a.cust_group,
round(a.ot_ro_bef_3/b.d_camp)ot_ro_avg_3, round(a.ot_ro_bef_6/b.d_camp)ot_ro_avg_6,
round(a.ot_ro_bef_9/b.d_camp)ot_ro_avg_9,round(a.ot_ro_bef_12/b.d_camp)ot_ro_avg_12 from model.final_model_13 a inner join model.dist_camp b on a.cust_group=b.cust_group;

--Appending all the above created RO variables into a single table
select count(*) from model.features_49_v2 as fv;
create table model.features_50_v2 as 
select a.*,b.avg_3,b.avg_6,b.avg_9,b.avg_12,
c.fs_avg_3,c.fs_avg_6,c.fs_avg_9,c.fs_avg_12,
d.ps_avg_3,d.ps_avg_6,d.ps_avg_9,d.ps_avg_12,
e.rr_avg_3,e.rr_avg_6,e.rr_avg_9,e.rr_avg_12,
f.ot_avg_3,f.ot_avg_6,f.ot_avg_9,f.ot_avg_12,
g.ro_avg_3,g.ro_avg_6,g.ro_avg_9,g.ro_avg_12,
h.fs_ro_avg_3,h.fs_ro_avg_6,h.fs_ro_avg_9,h.fs_ro_avg_12,
i.ps_ro_avg_3,i.ps_ro_avg_6,i.ps_ro_avg_9,i.ps_ro_avg_12,
j.rr_ro_avg_3,j.rr_ro_avg_6,j.rr_ro_avg_9,j.rr_ro_avg_12,
k.ot_ro_avg_3,k.ot_ro_avg_6,k.ot_ro_avg_9,k.ot_ro_avg_12 from model.features_49_v2 a 
left outer join model.final_model_3_v2 b on a.cust_group=b.cust_group
left outer join model.final_model_4_v2 c on a.cust_group=c.cust_group
left outer join model.final_model_5_v2 d on a.cust_group=d.cust_group
left outer join model.final_model_6_v2 e on a.cust_group=e.cust_group
left outer join model.final_model_7_v2 f on a.cust_group=f.cust_group
left outer join model.final_model_8_v2 g on a.cust_group=g.cust_group
left outer join model.final_model_10_v2 h on a.cust_group=h.cust_group
left outer join model.final_model_11_v2 i on a.cust_group=i.cust_group
left outer join model.final_model_12_v2 j on a.cust_group=j.cust_group
left outer join model.final_model_13_v2 k on a.cust_group=k.cust_group;

--Trifurcating the Gold group of customers
create table model.features_51_v2 as 
select cust_group, (case when avg_veh_age<=1 then 1 else 0 end) as age_1,
         (case when avg_veh_age >1 and avg_veh_age<=2 then 1 else 0 end) as age_2, 
      (case when avg_veh_age > 2 and avg_veh_age<=3 then 1 else 0 end) as age_3,
      (case when avg_veh_age > 3 then 1 else 0 end) as age_others from model.features_50_v2;

create table model.features_52_v2 as
select a.*,b.age_1,b.age_2,b.age_3,b.age_others from model.features_50_v2 a inner join model.features_51_v2 b on a.cust_group=b.cust_group;

select con_cd ,count(*) from model.final_model_1 fm where labels is not null group by 1;

--Creating a clean version of gender and con_cd variables
create table model.features_53_v2 as
select distinct cust_group, contact_id,sex_mf, con_cd from model.final_model_1 where labels is not null; 

create table model.features_54_v2 as
select distinct cust_group, vin, round((date(prog_start_dt_new)-date(registered_dt))/ 365) as Age_of_vehicle,ext_color_cd
from model.final_model_1 where labels is not null;

select sex_mf,count(*) from model.features_53_v2 group by 1;

create table model.features_55_v2 as
select cust_group, 
(case when sex_mf = 'F' or sex_mf = 'W' or sex_mf = 'Female' then 'F'
	  when sex_mf = 'M' or sex_mf = 'Male' then 'M'
	  else 'U' end) sex,
	  (case when con_cd = 'C' or con_cd = 'E' then 'Corporate'
	  when con_cd = 'F' or con_cd = 'G' or con_cd = 'GM' then 'Fleet'
	  when con_cd = 'Individual' or con_cd = 'I' or con_cd = 'S' then 'Individual'
	  else 'Others' end) con_cd from model.features_53_v2;
	 
--- Creating a cleaned up version of customer vehicle age bins, Trifurcation of Gold group and the top color of vehicle colors
create table model.features_56_v2 as
select cust_group,
	  (case when Age_of_vehicle<=1 then 1
      when Age_of_vehicle<=2 then 2 
      when Age_of_vehicle<=3 then 3
      else 0 end)age_123,
      (case when Age_of_vehicle <= 3 then 'Gold(0-3Y)'
         when Age_of_vehicle <=5 then 'Platinum(4Y-5Y)' 
      when Age_of_vehicle<=7 then 'Diamond(6Y-7Y)'
      when Age_of_vehicle<=10 then'Sapphire(8Y-10Y)'
      else 'Loyal(GT 10Y)' end)age_slab,
     (case when ext_color_cd='Polar White' then 'Polar White'
	when ext_color_cd='Sleek Silver' then 'Sleek Silver'
	when ext_color_cd='Pure White' then 'Pure White'
	when ext_color_cd='Star Dust' then 'Star Dust'
	when ext_color_cd='Red Passion' then 'Red Passion'
	when ext_color_cd='Wine Red' then 'Wine Red'
	when ext_color_cd='Twilight Blue' then 'Twilight Blue'
	when ext_color_cd='Coral White' then 'Coral White'
	else 'Others' end) color_cd from model.features_54_v2;


create table model.features_57_v2 as 
select cust_group,  sum(case when sex='F' then 1 else 0 end) as sex_f_ct,
sum(case when sex='M' then 1 else 0 end) as sex_m_ct,
sum(case when sex='U' then 1 else 0 end) as sex_u_ct,
sum(case when con_cd='Corporate' then 1 else 0 end) as con_cor_ct,
sum(case when con_cd='Fleet' then 1 else 0 end) as con_fle_ct,
sum(case when con_cd='Individual' then 1 else 0 end) as con_ind_ct,
sum(case when con_cd='Others' then 1 else 0 end) as con_oth_ct from model.features_55_v2 group by 1;

create table model.features_58_v2 as 
select cust_group, (case when sex_m_ct = greatest(sex_m_ct,sex_f_ct,sex_u_ct) then 'M'
when sex_f_ct = greatest(sex_m_ct,sex_f_ct,sex_u_ct) then 'F'
else 'U' end) max_sex,
(case when con_cor_ct = greatest(con_cor_ct,con_fle_ct,con_ind_ct,con_oth_ct) then 'Corporate'
when con_fle_ct = greatest(con_cor_ct,con_fle_ct,con_ind_ct,con_oth_ct) then 'Fleet'
when con_ind_ct = greatest(con_cor_ct,con_fle_ct,con_ind_ct,con_oth_ct) then 'Individual'
else 'Others' end) new_max_con_cd from model.features_57_v2;

create table model.features_59_v2 as 
select cust_group, sum(case when age_123=1 then 1 else 0 end) as age_1_ct,
sum(case when age_123=2 then 1 else 0 end) as age_2_ct,
sum(case when age_123=3 then 1 else 0 end) as age_3_ct,
sum(case when age_123=0 then 1 else 0 end) as age_0_ct,
sum(case when age_slab='Gold(0-3Y)' then 1 else 0 end) as age_g_ct,
sum(case when age_slab='Platinum(4Y-5Y)' then 1 else 0 end) as age_p_ct,
sum(case when age_slab='Diamond(6Y-7Y)' then 1 else 0 end) as age_d_ct,
sum(case when age_slab='Sapphire(8Y-10Y)' then 1 else 0 end) as age_s_ct,
sum(case when age_slab='Loyal(GT 10Y)' then 1 else 0 end) as age_l_ct,
sum(case when color_cd = 'Polar White' then 1 else 0 end) as col_Polar_White,
sum(case when color_cd = 'Sleek Silver' then 1 else 0 end) as col_Sleek_Silver,
sum(case when color_cd = 'Pure White' then 1 else 0 end) as col_Pure_White,
sum(case when color_cd = 'Star Dust' then 1 else 0 end) as col_Star_Dust,
sum(case when color_cd = 'Red Passion' then 1 else 0 end) as col_Red_Passion,
sum(case when color_cd = 'Wine Red' then 1 else 0 end) as col_Wine_Red,
sum(case when color_cd = 'Twilight Blue' then 1 else 0 end) as col_Twilight_Blue,
sum(case when color_cd = 'Coral White' then 1 else 0 end) as col_Coral_White,
sum(case when color_cd = 'Others' then 1 else 0 end) as col_Others from model.features_56_v2 group by 1;

create table model.features_60_v2 as 
select cust_group, (case when age_1_ct = greatest(age_1_ct,age_2_ct,age_2_ct,age_0_ct) then '1'
when age_2_ct = greatest(age_1_ct,age_2_ct,age_2_ct,age_0_ct) then '2'
when age_3_ct = greatest(age_1_ct,age_2_ct,age_2_ct,age_0_ct) then '3'
else '0' end) max_age_123,
(case when age_g_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'G'
when age_p_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'P'
when age_d_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'D'
when age_s_ct = greatest(age_g_ct,age_p_ct,age_d_ct,age_s_ct,age_l_ct) then 'S'
else 'L' end) max_age_slab,
(case when col_Polar_White = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Polar White'
when col_Sleek_Silver = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Sleek Silver'
when col_Pure_White = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Pure White'
when col_Star_Dust = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Star Dust'
when col_Red_Passion = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Red Passion'
when col_Wine_Red = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Wine Red'
when col_Twilight_Blue = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Twilight Blue'
when col_Coral_White = greatest(col_Polar_White,col_Sleek_Silver,col_Pure_White,col_Star_Dust,col_Red_Passion,col_Wine_Red,col_Twilight_Blue,col_Coral_White,col_Others) then 'Coral_White'
else 'Others' end) max_color from model.features_59_v2;

create table model.features_61_v2 as 
select a.cust_group,b.sex_f_ct,b.sex_m_ct,b.sex_u_ct,b.con_cor_ct,b.con_fle_ct,b.con_ind_ct,b.con_oth_ct,
c.max_con_cd,c.max_sex,
d.age_0_ct,d.age_1_ct,d.age_2_ct,d.age_3_ct,d.age_d_ct,d.age_g_ct,d.age_l_ct,d.age_p_ct,d.age_s_ct,
d.col_coral_white,d.col_others,d.col_polar_white,d.col_pure_white,d.col_red_passion,d.col_sleek_silver,
d.col_star_dust,d.col_twilight_blue,d.col_wine_red,
e.max_age_123,e.max_age_slab,e.max_color from model.features_52_v2 a inner join model.features_57_v2 b on a.cust_group=b.cust_group
 inner join model.features_58_v2 c on a.cust_group=c.cust_group
 inner join model.features_59_v2 d on a.cust_group=d.cust_group
 inner join model.features_60_v2 e on a.cust_group=e.cust_group;

--appending all the above created variables into a single table
create table model.features_62_v2 as 
select a.*, b.sex_f_ct,b.sex_m_ct,b.sex_u_ct,b.con_cor_ct,b.con_fle_ct,b.con_ind_ct,b.con_oth_ct,
b.max_con_cd as new_max_con_cd,b.max_sex,
b.age_0_ct,b.age_1_ct,b.age_2_ct,b.age_3_ct,b.age_d_ct,b.age_g_ct,b.age_l_ct,b.age_p_ct,b.age_s_ct,
b.col_coral_white,b.col_others,b.col_polar_white,b.col_pure_white,b.col_red_passion,b.col_sleek_silver,
b.col_star_dust,b.col_twilight_blue,b.col_wine_red,
b.max_age_123,b.max_age_slab,b.max_color from model.features_52_v2 a inner join model.features_61_v2 b on a.cust_group=b.cust_group;

--creating a cleaned up version of campaign frequency and campaign sub type variables
create table model.features_63_v2 as 
select distinct cust_group,new_camp_id,frequency from model.final_model_1;

create table model.features_64_v2 as 
select distinct cust_group, new_camp_id, camp_sub_type from model.final_model_1;

create table model.features_65_v2 as 
select cust_group, sum(case when frequency='Annual' then 1 else 0 end) as new_fre_an_ct,
sum(case when frequency='As required' then 1 else 0 end) as new_fre_as_ct,
sum(case when frequency='Bi-Annual' then 1 else 0 end) as new_fre_bi_ct,
sum(case when frequency='One-time' then 1 else 0 end) as new_fre_on_ct from model.features_63_v2 group by 1;

create table model.features_69_v2 as 
select cust_group, (case when new_fre_an_ct = greatest(new_fre_an_ct,new_fre_as_ct,new_fre_bi_ct,new_fre_on_ct) then 'Annual'
when new_fre_as_ct = greatest(new_fre_an_ct,new_fre_as_ct,new_fre_bi_ct,new_fre_on_ct) then 'As required'
when new_fre_bi_ct = greatest(new_fre_an_ct,new_fre_as_ct,new_fre_bi_ct,new_fre_on_ct) then 'Bi-Annual'
else 'One-time' end) new_max_frequency from model.features_65_v2;

create table model.features_66_v2 as 
select a.*,b.new_fre_an_ct,b.new_fre_as_ct,b.new_fre_bi_ct,b.new_fre_on_ct from model.features_62_v2 a inner join model.features_65_v2 b on a.cust_group=b.cust_group;

create table model.features_66_v3 as 
select a.*,b.new_fre_an_ct,b.new_fre_as_ct,b.new_fre_bi_ct,b.new_fre_on_ct,c.new_max_frequency from model.features_62_v2 a inner join model.features_65_v2 b on a.cust_group=b.cust_group
inner join model.features_69_v2 c on a.cust_group=c.cust_group;

create table model.features_67_v2 as 
select cust_group, sum(case when camp_sub_type='Festival' then 1 else 0 end) as new_type_fes_ct,
sum(case when camp_sub_type='Flagship' then 1 else 0 end) as new_type_fla_ct,
sum(case when camp_sub_type='Others' then 1 else 0 end) as new_type_oth_ct,
sum(case when camp_sub_type='Seasonal' then 1 else 0 end) as new_type_sea_ct,
sum(case when camp_sub_type='Special Day' then 1 else 0 end) as new_type_spe_ct from model.features_64_v2 group by 1;

create table model.features_70_v2 as 
select cust_group, (case when new_type_fes_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Festival'
when new_type_fla_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Flagship'
when new_type_oth_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Others'
when new_type_sea_ct = greatest(new_type_fes_ct,new_type_fla_ct,new_type_oth_ct,new_type_sea_ct,new_type_spe_ct) then 'Seasonal'
else 'Special Day' end) new_max_sub_type from model.features_67_v2;

create table model.features_68_v2 as 
select a.*,b.new_type_fes_ct,b.new_type_fla_ct,b.new_type_oth_ct,b.new_type_sea_ct,b.new_type_spe_ct from model.features_66_v2 a inner join model.features_67_v2 b on a.cust_group=b.cust_group;

create table model.features_68_v3 as 
select a.*,b.new_type_fes_ct,b.new_type_fla_ct,b.new_type_oth_ct,b.new_type_sea_ct,b.new_type_spe_ct,c.new_max_sub_type from model.features_66_v2 a inner join model.features_67_v2 b on a.cust_group=b.cust_group
inner join model.features_70_v2 c on a.cust_group=c.cust_group;

--creating variable which captures the average mileage a vehicle has got when it came for an RO
create table model.final_model_14 as
select a.cust_group,sum(case when a.repm_ro_dtime between a.bef_3 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_3, 
sum(case when a.repm_ro_dtime between a.bef_6 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_6,
sum(case when a.repm_ro_dtime between a.bef_9 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_9,
sum(case when a.repm_ro_dtime between a.bef_12 and a.prog_start_dt_new then a.repm_milg else 0 end) mlg_sum_12 from model.final_model_2_v2 a group by 1;

create table model.final_model_14_v2 as 
select a.cust_group,
round(a.mlg_sum_3/b.d_camp)mlg_avg_3, round(a.mlg_sum_6/b.d_camp)mlg_avg_6,
round(a.mlg_sum_9/b.d_camp)mlg_avg_9,round(a.mlg_sum_12/b.d_camp)mlg_avg_12 from model.final_model_14 a inner join model.dist_camp b on a.cust_group=b.cust_group;

create table model.cust_group as
select distinct cust_group from model.features_50_v2 as fv;

create table model.features_v3 as 
select a.cust_group,b.mlg_avg_3,b.mlg_avg_6,b.mlg_avg_9,b.mlg_avg_12 from model.cust_group a left outer join model.final_model_14_v2 b on a.cust_group=b.cust_group;

--creating a varaiable which captures weather a single car owner who has come for an RO in the past 3 and 6 month periods	
create table model.features_71_v2 as 
select cust_group, (case when car_own_ty='Single' and avg_3 > 0 then 1 else 0 end)single_3_ind,
(case when car_own_ty='Single' and avg_6 > 0 then 1 else 0 end)single_6_ind from model.features_68_v2;

create table model.features_72_v2 as 
select a.*,b.mlg_avg_3,b.mlg_avg_6,b.mlg_avg_9,b.mlg_avg_12,c.single_3_ind, c.single_6_ind from model.features_68_v3 a inner join model.features_v3 b on a.cust_group=b.cust_group
inner join model.features_71_v2 c on a.cust_group=c.cust_group;

--creating a backup copy of the table 
create table model.features_73_v2 as select * from model.features_72_v2 a;

vacuum model.features_73_v2;
update model.features_73_v2 set con_oth_ct = (con_fle_ct+con_oth_ct);
alter table model.features_80_v2 drop column con_fle_ct;

-------------------------------------------------------------------------------------------------------------------------
---------------------Creating external variables HRA class, state literacy and state urbanisation -----------------------
------------------------------------according to both dealer code and city code -----------------------------------------
-------------------------------------------------------------------------------------------------------------------------

vacuum model.final_model_1;
create table model.features_74_v2 as 
select distinct a.cust_group,a.ro_dealer from model.final_model_1 a;

create table model.features_75_v2 as 
select distinct a.cust_group,a.city_code from model.final_model_1 a;

CREATE TABLE model.new_hra_city (
	City_code varchar(20) NULL,
	city varchar(20) NULL,
	state_short varchar(20) NULL,
	state varchar(20) NULL,
	region varchar(20) NULL,
	"zone" varchar(20) null,
	HRA_Class varchar(20) null,
	State_Literacy varchar(20) null,
	State_Urbanisation varchar(20) null
);
	
CREATE TABLE model.new_hra_dealer (
	dealer_code varchar(20) NULL,
	ws_type varchar(20) NULL,
	city varchar(200) NULL,
	state varchar(200) NULL,
	region varchar(20) NULL,
	"zone" varchar(20) null,
	HRA_Class varchar(20) null,
	State_Literacy varchar(20) null,
	State_Urbanisation varchar(20) null
);

create table model.features_76_v2 as 
select a.*, b.hra_class,b.state_literacy,b.state_urbanisation from model.features_74_v2 a left outer join model.new_hra_dealer b on a.ro_dealer=b.dealer_code;

create table model.features_77_v2 as 
select a.*, b.hra_class,b.state_literacy,b.state_urbanisation from model.features_75_v2 a left outer join model.new_hra_city b on a.city_code=b.city_code;

create table model.features_78_v2 as 
select a.cust_group, max(a.hra_class) max_dlr_hra, max(a.state_literacy) max_dlr_lit, avg(cast(a.state_literacy as float8)) avg_dlr_lit,
max(a.state_urbanisation) max_dlr_urb, avg(cast(a.state_urbanisation as float8)) avg_dlr_urb,
sum(case when a.hra_class='X' then 1 else 0 end) as X_dlr_hra,
sum(case when a.hra_class='Y' then 1 else 0 end) as Y_dlr_hra,
sum(case when a.hra_class='Z' then 1 else 0 end) as Z_dlr_hra from model.features_76_v2 a group by 1;

create table model.features_79_v2 as 
select a.cust_group, max(a.hra_class) max_city_hra, max(a.state_literacy) max_city_lit, avg(cast(a.state_literacy as float8)) avg_city_lit,
max(a.state_urbanisation) max_city_urb, avg(cast(a.state_urbanisation as float8)) avg_city_urb, 
sum(case when a.hra_class='X' then 1 else 0 end) as X_city_hra,
sum(case when a.hra_class='Y' then 1 else 0 end) as Y_city_hra,
sum(case when a.hra_class='Z' then 1 else 0 end) as Z_city_hra from model.features_77_v2 a group by 1;

----------------------------------------------------------------------------------------------------------
----------------------------------------The final table used for modelling--------------------------------
----------------------------------------------------------------------------------------------------------

vacuum model.features_73_v2;
vacuum model.features_78_v2;
vacuum model.features_79_v2;
create table model.features_80_v2 as 
select a.*, b.max_dlr_hra,b.max_dlr_lit,b.avg_dlr_lit,b.max_dlr_urb,b.avg_dlr_urb,b.x_dlr_hra,b.y_dlr_hra,b.z_dlr_hra,
c.max_city_hra,c.max_city_lit,c.avg_city_lit,c.max_city_urb,c.avg_city_urb,c.x_city_hra,c.y_city_hra,c.z_city_hra 
from model.features_73_v2 a 
inner join model.features_78_v2 b on a.cust_group=b.cust_group
inner join model.features_79_v2 c on a.cust_group=c.cust_group;

------------------------------------------------------------------------------------------------------------------------------------

